<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Color on Black Thread Design</title>
    <link>https://www.blackthreaddesign.com/tags/color/</link>
    <description>Recent content in Color on Black Thread Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://www.blackthreaddesign.com/tags/color/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Rainbows - colors in three.js</title>
      <link>https://www.blackthreaddesign.com/tutorials/2-0-creating-rainbows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.blackthreaddesign.com/tutorials/2-0-creating-rainbows/</guid>
      <description>Fig 1: Three.js... with just a little help from Photoshop   We&amp;rsquo;ll be working closely with the Color docs page here. Open it up now and take a look.
The first thing you&amp;rsquo;ll notice is that there are many ways to specify a colour. For example, you can pass in 2 numbers representing the Red, Green and Blue components of the colour, or you can pass in the string &amp;lsquo;rebeccapurple&amp;rsquo; (or any other CSS color string), or you can pass in a HLS value.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://www.blackthreaddesign.com/tutorials/1-0-getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.blackthreaddesign.com/tutorials/1-0-getting-started/</guid>
      <description>Strap in folks, it&amp;rsquo;s time to push some pixels!
Let&amp;rsquo;s get our first three.js scene up and running. When we are finished with chapters 1 and 2, we&amp;rsquo;ll have this glorious beast shining and rotating before us:

Follow along on Codepen I mentioned a few times in the introductory chapters that we&amp;rsquo;ll be using Codepen throughout these tutorials, and that you can either follow along there or create local files on your computer, but since I assume that lots of people are like me and skip introductory chapters, I should probably mention it again.</description>
    </item>
    
    <item>
      <title>Lights, Color, Action!</title>
      <link>https://www.blackthreaddesign.com/tutorials/1-1-lights-color-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.blackthreaddesign.com/tutorials/1-1-lights-color-action/</guid>
      <description>We&amp;rsquo;ll pick up here exactly where we left off in the last chapter. Here is the complete code so far:
// create a WebGLRenderer and set its width and height const renderer = new THREE.WebGLRenderer(); renderer.setSize( window.innerWidth, window.innerHeight ); // add the automatically created canvas element to the page document.body.appendChild( renderer.domElement ); // create a Scene const scene = new THREE.Scene(); // set up the options for a perspective camera const fov = 35; // fov = Field Of View const aspect = window.</description>
    </item>
    
  </channel>
</rss>