THREE.VRMLLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.VRMLLoader.prototype={constructor:THREE.VRMLLoader,isRecordingPoints:!1,isRecordingFaces:!1,points:[],indexes:[],isRecordingAngles:!1,isRecordingColors:!1,angles:[],colors:[],recordingFieldname:null,crossOrigin:"Anonymous",load:function(e,r,i,o){var s=this;new THREE.FileLoader(this.manager).load(e,function(e){r(s.parse(e))},i,o)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var r=this.texturePath||"",i=new THREE.TextureLoader(this.manager);i.setCrossOrigin(this.crossOrigin);for(var o=new THREE.Scene,s=e.split("\n"),t=s.length-1;t>-1;t--){var n=s[t];if(/{.*[{\[]/.test(n))(a=n.split("{").join("{\n").split("\n")).unshift(1),a.unshift(t),s.splice.apply(s,a);else if(/\].*}/.test(n)){var a;(a=n.split("]").join("]\n").split("\n")).unshift(1),a.unshift(t),s.splice.apply(s,a)}if(/}.*}/.test(n))(a=n.split("}").join("}\n").split("\n")).unshift(1),a.unshift(t),s.splice.apply(s,a);/^\b[^\s]+\b$/.test(n.trim())?(s[t+1]=n+" "+s[t+1].trim(),s.splice(t,1)):n.indexOf("coord")>-1&&n.indexOf("[")<0&&n.indexOf("{")<0&&(s[t]+=" Coordinate {}")}var l=s.shift();return/V1.0/.exec(l)?console.warn("THREE.VRMLLoader: V1.0 not supported yet."):/V2.0/.exec(l)&&function(e,o){var s={},t=/(\b|\-|\+)([\d\.e]+)/,n=/([\d\.\+\-e]+)\s+([\d\.\+\-e]+)/g,a=/([\d\.\+\-e]+)\s+([\d\.\+\-e]+)\s+([\d\.\+\-e]+)/g;function l(e,r,i,o,s){for(var t=!0===s?1:-1,n=[],a={},l={},d=0;d<i.length;d++){var c={x:t*(Math.cos(i[d])*r),y:t*(Math.sin(i[d])*r)};n.push(c)}for(var f=e.index,h=e.attributes.position,g=new THREE.BufferAttribute(new Float32Array(3*e.attributes.position.count),3),p=new THREE.Vector3,u=new THREE.Color,E=0;E<f.count;E++){var y=f.getX(E);p.fromBufferAttribute(h,y);for(var x=0;x<o.length;x++)if(0===x?(a.x=0,a.y=!0===s?r:-1*r):(a.x=n[x-1].x,a.y=n[x-1].y),void 0!==(l=n[x]))if(!0==(!0===s?p.y<=a.y&&p.y>l.y:p.y>=a.y&&p.y<l.y)){var v=o[x],R=o[x+1],m=Math.abs(p.y-a.y)/(a.y-l.y);u.copy(v).lerp(R,m),g.setXYZ(y,u.r,u.g,u.b)}else{var T=o[!0===s?o.length-1:0];g.setXYZ(y,T.r,T.g,T.b)}}e.addAttribute("color",g)}var d=[];function c(e,r){for(var i,o,s,l=[],c={},f=/[^\s,\[\]]+/g;null!==(i=f.exec(r));)l.push(i[0]);switch(o=l[0]){case"skyAngle":case"groundAngle":this.recordingFieldname=o,this.isRecordingAngles=!0,this.angles=[];break;case"skyColor":case"groundColor":this.recordingFieldname=o,this.isRecordingColors=!0,this.colors=[];break;case"point":this.recordingFieldname=o,this.isRecordingPoints=!0,this.points=[];break;case"coordIndex":case"texCoordIndex":this.recordingFieldname=o,this.isRecordingFaces=!0,this.indexes=[]}if(this.isRecordingFaces){if(l.length>0)for(var h=0;h<l.length;h++)/(-?\d+)/.test(l[h])&&("-1"===l[h]?(d.length>0&&this.indexes.push(d),d=[]):d.push(parseInt(l[h])));/]/.exec(r)&&(d.length>0&&this.indexes.push(d),d=[],this.isRecordingFaces=!1,e[this.recordingFieldname]=this.indexes)}else if(this.isRecordingPoints){if("Coordinate"==e.nodeType)for(;null!==(l=a.exec(r));)s={x:parseFloat(l[1]),y:parseFloat(l[2]),z:parseFloat(l[3])},this.points.push(s);if("TextureCoordinate"==e.nodeType)for(;null!==(l=n.exec(r));)s={x:parseFloat(l[1]),y:parseFloat(l[2])},this.points.push(s);/]/.exec(r)&&(this.isRecordingPoints=!1,e.points=this.points)}else if(this.isRecordingAngles){if(l.length>0)for(h=0;h<l.length;h++)t.test(l[h])&&this.angles.push(parseFloat(l[h]));/]/.exec(r)&&(this.isRecordingAngles=!1,e[this.recordingFieldname]=this.angles)}else if(this.isRecordingColors){for(;null!==(l=a.exec(r));){var g={r:parseFloat(l[1]),g:parseFloat(l[2]),b:parseFloat(l[3])};this.colors.push(g)}/]/.exec(r)&&(this.isRecordingColors=!1,e[this.recordingFieldname]=this.colors)}else if("NULL"!==l[l.length-1]&&"children"!==o){switch(o){case"diffuseColor":case"emissiveColor":case"specularColor":case"color":if(4!==l.length){console.warn("THREE.VRMLLoader: Invalid color format detected for %s.",o);break}c={r:parseFloat(l[1]),g:parseFloat(l[2]),b:parseFloat(l[3])};break;case"location":case"direction":case"translation":case"scale":case"size":if(4!==l.length){console.warn("THREE.VRMLLoader: Invalid vector format detected for %s.",o);break}c={x:parseFloat(l[1]),y:parseFloat(l[2]),z:parseFloat(l[3])};break;case"intensity":case"cutOffAngle":case"radius":case"topRadius":case"bottomRadius":case"height":case"transparency":case"shininess":case"ambientIntensity":if(2!==l.length){console.warn("THREE.VRMLLoader: Invalid single float value specification detected for %s.",o);break}c=parseFloat(l[1]);break;case"rotation":if(5!==l.length){console.warn("THREE.VRMLLoader: Invalid quaternion format detected for %s.",o);break}c={x:parseFloat(l[1]),y:parseFloat(l[2]),z:parseFloat(l[3]),w:parseFloat(l[4])};break;case"on":case"ccw":case"solid":case"colorPerVertex":case"convex":if(2!==l.length){console.warn("THREE.VRMLLoader: Invalid format detected for %s.",o);break}c="TRUE"===l[1]}e[o]=c}return c}!function e(t,n){var a;if("string"!=typeof t){a=n,t.string.indexOf("AmbientLight")>-1&&"PointLight"===t.nodeType&&(t.nodeType="AmbientLight");var d=void 0===t.on||t.on,c=void 0!==t.intensity?t.intensity:1,f=new THREE.Color;if(t.color&&f.copy(t.color),"AmbientLight"===t.nodeType)(a=new THREE.AmbientLight(f,c)).visible=d,n.add(a);else if("PointLight"===t.nodeType){var h=0;void 0!==t.radius&&t.radius<1e3&&(h=t.radius),(a=new THREE.PointLight(f,c,h)).visible=d,n.add(a)}else if("SpotLight"===t.nodeType){c=1,h=0;var g=Math.PI/3;d=!0,void 0!==t.radius&&t.radius<1e3&&(h=t.radius),void 0!==t.cutOffAngle&&(g=t.cutOffAngle),(a=new THREE.SpotLight(f,c,h,g,0)).visible=d,n.add(a)}else if("Transform"===t.nodeType||"Group"===t.nodeType){if(a=new THREE.Object3D,/DEF/.exec(t.string)&&(a.name=/DEF\s+([^\s]+)/.exec(t.string)[1],s[a.name]=a),void 0!==t.translation){var p=t.translation;a.position.set(p.x,p.y,p.z)}if(void 0!==t.rotation){var u=t.rotation;a.quaternion.setFromAxisAngle(new THREE.Vector3(u.x,u.y,u.z),u.w)}if(void 0!==t.scale){var E=t.scale;a.scale.set(E.x,E.y,E.z)}n.add(a)}else if("Shape"===t.nodeType)a=new THREE.Mesh,/DEF/.exec(t.string)&&(a.name=/DEF\s+([^\s]+)/.exec(t.string)[1],s[a.name]=a),n.add(a);else if("Background"===t.nodeType){var y=2e4,x=new THREE.SphereBufferGeometry(y,20,20),v=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide});if(t.skyColor.length>1)l(x,y,t.skyAngle,t.skyColor,!0),v.vertexColors=THREE.VertexColors;else{var R=t.skyColor[0];v.color.setRGB(R.r,R.b,R.g)}if(o.add(new THREE.Mesh(x,v)),void 0!==t.groundColor){y=12e3;var m=new THREE.SphereBufferGeometry(y,20,20,0,2*Math.PI,.5*Math.PI,1.5*Math.PI),T=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,vertexColors:THREE.VertexColors});l(m,y,t.groundAngle,t.groundColor,!1),o.add(new THREE.Mesh(m,T))}}else{if(/geometry/.exec(t.string)){if("Box"===t.nodeType)E=t.size,n.geometry=new THREE.BoxBufferGeometry(E.x,E.y,E.z);else if("Cylinder"===t.nodeType)n.geometry=new THREE.CylinderBufferGeometry(t.radius,t.radius,t.height);else if("Cone"===t.nodeType)n.geometry=new THREE.CylinderBufferGeometry(t.topRadius,t.bottomRadius,t.height);else if("Sphere"===t.nodeType)n.geometry=new THREE.SphereBufferGeometry(t.radius);else if("IndexedFaceSet"===t.nodeType){var F,b,w,H,C,L=new THREE.BufferGeometry,A=[],M=[];for(z=0,w=t.children.length;z<w;z++){if("TextureCoordinate"===(G=t.children[z]).nodeType&&G.points)for(H=0,C=G.points.length;H<C;H++)b=G.points[H],M.push(b.x,b.y);if("Coordinate"===G.nodeType){if(G.points)for(H=0,C=G.points.length;H<C;H++)F=G.points[H],A.push(F.x,F.y,F.z);if(G.string.indexOf("DEF")>-1){var B=/DEF\s+([^\s]+)/.exec(G.string)[1];s[B]=A.slice(0)}G.string.indexOf("USE")>-1&&(Y=/USE\s+([^\s]+)/.exec(G.string)[1],A=s[Y])}}var k=0;if(t.coordIndex){var V=[],S=[];for(F=new THREE.Vector3,b=new THREE.Vector2,z=0,w=t.coordIndex.length;z<w;z++){var I=t.coordIndex[z];for(k=0;I.length>=3&&k<I.length-2;){void 0===t.ccw&&(t.ccw=!0);var O=I[0],D=I[k+(t.ccw?1:2)],P=I[k+(t.ccw?2:1)];F.fromArray(A,3*O),b.fromArray(M,2*O),V.push(F.x,F.y,F.z),S.push(b.x,b.y),F.fromArray(A,3*D),b.fromArray(M,2*D),V.push(F.x,F.y,F.z),S.push(b.x,b.y),F.fromArray(A,3*P),b.fromArray(M,2*P),V.push(F.x,F.y,F.z),S.push(b.x,b.y),k++}}A=V,M=S}else n.parent.remove(n);!1===t.solid&&(n.material.side=THREE.DoubleSide),L.solid=t.solid,L.addAttribute("position",new THREE.Float32BufferAttribute(A,3)),M.length>0&&L.addAttribute("uv",new THREE.Float32BufferAttribute(M,2)),L.computeVertexNormals(),L.computeBoundingSphere(),/DEF/.exec(t.string)&&(L.name=/DEF ([^\s]+)/.exec(t.string)[1],s[L.name]=L),n.geometry=L}return}if(/appearance/.exec(t.string)){for(var z=0;z<t.children.length;z++){var G;if("Material"===(G=t.children[z]).nodeType){var U=new THREE.MeshPhongMaterial;if(void 0!==G.diffuseColor){var j=G.diffuseColor;U.color.setRGB(j.r,j.g,j.b)}if(void 0!==G.emissiveColor){var X=G.emissiveColor;U.emissive.setRGB(X.r,X.g,X.b)}void 0!==G.specularColor&&(E=G.specularColor,U.specular.setRGB(E.r,E.g,E.b)),void 0!==G.transparency&&(p=G.transparency,U.opacity=Math.abs(1-p),U.transparent=!0),/DEF/.exec(t.string)&&(U.name=/DEF ([^\s]+)/.exec(t.string)[1],s[U.name]=U),n.material=U}if("ImageTexture"===G.nodeType){var q=/"([^"]+)"/.exec(G.children[0]);q&&(n.material.name=q[1],n.material.map=i.load(r+q[1]))}}return}}z=0;for(var N=t.children.length;z<N;z++)e(t.children[z],a)}else if(/USE/.exec(t)){var Y=/USE\s+?([^\s]+)/.exec(t)[1];void 0==s[Y]?console.warn("THREE.VRMLLoader: %s is not defined.",Y):/appearance/.exec(t)&&Y?n.material=s[Y].clone():/geometry/.exec(t)&&Y?(n.geometry=s[Y].clone(),void 0!==s[Y].solid&&!1===s[Y].solid&&(n.geometry.solid=!1,n.material.side=THREE.DoubleSide)):Y&&(a=s[Y].clone(),n.add(a))}}(function(e){for(var r,i,o={string:"Scene",children:[]},s=o,t=0;t<e.length;t++){var n="",a=e[t];if(null===/^\s+?$/g.exec(a)&&""!==(a=a.trim())){if(/#/.exec(a)){var l=a.split("#");a=l[0],n=l[1]}if(r=/([^\s]*){1}(?:\s+)?{/.exec(a)){var d={nodeType:r[1],string:a,parent:s,children:[],comment:n};s.children.push(d),s=d,/}/.exec(a)&&(i=/{(.*)}/.exec(a)[1],d.children.push(i),c(s,i),s=s.parent)}else/}/.exec(a)?s=s.parent:""!==a&&(c(s,a),s.children.push(a))}}return o}(e),o)}(s,o),o}};