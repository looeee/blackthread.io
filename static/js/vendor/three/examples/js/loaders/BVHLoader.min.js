THREE.BVHLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.animateBonePositions=!0,this.animateBoneRotations=!0},THREE.BVHLoader.prototype={constructor:THREE.BVHLoader,load:function(e,o,r,t){var a=this;new THREE.FileLoader(a.manager).load(e,function(e){o(a.parse(e))},r,t)},parse:function(e){function o(e,r,t){if("ENDSITE"!==t.type){var a={time:r,position:new THREE.Vector3,rotation:new THREE.Quaternion};t.frames.push(a);for(var n=new THREE.Quaternion,i=new THREE.Vector3(1,0,0),s=new THREE.Vector3(0,1,0),E=new THREE.Vector3(0,0,1),p=0;p<t.channels.length;p++)switch(t.channels[p]){case"Xposition":a.position.x=parseFloat(e.shift().trim());break;case"Yposition":a.position.y=parseFloat(e.shift().trim());break;case"Zposition":a.position.z=parseFloat(e.shift().trim());break;case"Xrotation":n.setFromAxisAngle(i,parseFloat(e.shift().trim())*Math.PI/180),a.rotation.multiply(n);break;case"Yrotation":n.setFromAxisAngle(s,parseFloat(e.shift().trim())*Math.PI/180),a.rotation.multiply(n);break;case"Zrotation":n.setFromAxisAngle(E,parseFloat(e.shift().trim())*Math.PI/180),a.rotation.multiply(n);break;default:console.warn("THREE.BVHLoader: Invalid channel type.")}for(p=0;p<t.children.length;p++)o(e,r,t.children[p])}}function r(e){for(var o;0===(o=e.shift().trim()).length;);return o}var t=this,a=function(e){"HIERARCHY"!==r(e)&&console.error("THREE.BVHLoader: HIERARCHY expected.");var t=[],a=function e(o,t,a){var n={name:"",type:"",frames:[]};a.push(n);var i=t.split(/[\s]+/);"END"===i[0].toUpperCase()&&"SITE"===i[1].toUpperCase()?(n.type="ENDSITE",n.name="ENDSITE"):(n.name=i[1],n.type=i[0].toUpperCase()),"{"!==r(o)&&console.error("THREE.BVHLoader: Expected opening { after type & name"),"OFFSET"!==(i=r(o).split(/[\s]+/))[0]&&console.error("THREE.BVHLoader: Expected OFFSET but got: "+i[0]),4!==i.length&&console.error("THREE.BVHLoader: Invalid number of values for OFFSET.");var s=new THREE.Vector3(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]));if((isNaN(s.x)||isNaN(s.y)||isNaN(s.z))&&console.error("THREE.BVHLoader: Invalid values of OFFSET."),n.offset=s,"ENDSITE"!==n.type){"CHANNELS"!==(i=r(o).split(/[\s]+/))[0]&&console.error("THREE.BVHLoader: Expected CHANNELS definition.");var E=parseInt(i[1]);n.channels=i.splice(2,E),n.children=[]}for(;;){var p=r(o);if("}"===p)return n;n.children.push(e(o,p,a))}}(e,r(e),t);"MOTION"!==r(e)&&console.error("THREE.BVHLoader: MOTION expected.");var n=r(e).split(/[\s]+/),i=parseInt(n[1]);isNaN(i)&&console.error("THREE.BVHLoader: Failed to read number of frames."),n=r(e).split(/[\s]+/);var s=parseFloat(n[2]);isNaN(s)&&console.error("THREE.BVHLoader: Failed to read frame time.");for(var E=0;E<i;E++)o(n=r(e).split(/[\s]+/),E*s,a);return t}(e.split(/[\r\n]+/g)),n=[];!function e(o,r){var t=new THREE.Bone;if(r.push(t),t.position.add(o.offset),t.name=o.name,"ENDSITE"!==o.type)for(var a=0;a<o.children.length;a++)t.add(e(o.children[a],r));return t}(a[0],n);var i=function(e){for(var o=[],r=0;r<e.length;r++){var a=e[r];if("ENDSITE"!==a.type){for(var n=[],i=[],s=[],E=0;E<a.frames.length;E++){var p=a.frames[E];n.push(p.time),i.push(p.position.x+a.offset.x),i.push(p.position.y+a.offset.y),i.push(p.position.z+a.offset.z),s.push(p.rotation.x),s.push(p.rotation.y),s.push(p.rotation.z),s.push(p.rotation.w)}t.animateBonePositions&&o.push(new THREE.VectorKeyframeTrack(".bones["+a.name+"].position",n,i)),t.animateBoneRotations&&o.push(new THREE.QuaternionKeyframeTrack(".bones["+a.name+"].quaternion",n,s))}}return new THREE.AnimationClip("animation",-1,o)}(a);return{skeleton:new THREE.Skeleton(n),clip:i}}};