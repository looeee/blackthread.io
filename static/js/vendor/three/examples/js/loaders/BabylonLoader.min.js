THREE.BabylonLoader=function(r){this.manager=void 0!==r?r:THREE.DefaultLoadingManager},THREE.BabylonLoader.prototype={constructor:THREE.BabylonLoader,load:function(r,e,t,a){var o=this;new THREE.FileLoader(o.manager).load(r,function(r){e(o.parse(JSON.parse(r)))},t,a)},parse:function(r){function e(r){var e=new THREE.BufferGeometry,t=r.indices,a=r.positions,o=r.normals,n=r.uvs;e.setIndex(t);for(var i=2,s=a.length;i<s;i+=3)a[i]=-a[i];if(e.addAttribute("position",new THREE.Float32BufferAttribute(a,3)),o){for(i=2,s=o.length;i<s;i+=3)o[i]=-o[i];e.addAttribute("normal",new THREE.Float32BufferAttribute(o,3))}n&&e.addAttribute("uv",new THREE.Float32BufferAttribute(n,2));var l=r.subMeshes;if(l)for(i=0,s=l.length;i<s;i++){var u=l[i];e.addGroup(u.indexStart,u.indexCount)}return e}return function(r,t){for(var a={},o=new THREE.Scene,n=r.cameras,i=0,s=n.length;i<s;i++){var l=n[i],u=new THREE.PerspectiveCamera(l.fov/Math.PI*180,1.33,l.minZ,l.maxZ);u.name=l.name,u.position.fromArray(l.position),l.rotation&&u.rotation.fromArray(l.rotation),a[l.id]=u}var f=r.lights;for(i=0,s=f.length;i<s;i++){var d;switch((l=f[i]).type){case 0:d=new THREE.PointLight;break;case 1:d=new THREE.DirectionalLight;break;case 2:d=new THREE.SpotLight;break;case 3:d=new THREE.HemisphereLight}d.name=l.name,l.position&&d.position.set(l.position[0],l.position[1],-l.position[2]),d.color.fromArray(l.diffuse),l.groundColor&&d.groundColor.fromArray(l.groundColor),l.intensity&&(d.intensity=l.intensity),a[l.id]=d,o.add(d)}var E=r.meshes;for(i=0,s=E.length;i<s;i++){var m;if((l=E[i]).indices){var p=e(l);m=new THREE.Mesh(p,t[l.materialId])}else m=new THREE.Group;m.name=l.name,m.position.set(l.position[0],l.position[1],-l.position[2]),m.rotation.fromArray(l.rotation),l.rotationQuaternion&&m.quaternion.fromArray(l.rotationQuaternion),m.scale.fromArray(l.scaling),l.parentId?a[l.parentId].add(m):o.add(m),a[l.id]=m}return o}(r,function(r){for(var e={},t=0,a=r.materials.length;t<a;t++){var o=r.materials[t],n=new THREE.MeshPhongMaterial;n.name=o.name,n.color.fromArray(o.diffuse),n.emissive.fromArray(o.emissive),n.specular.fromArray(o.specular),n.shininess=o.specularPower,n.opacity=o.alpha,e[o.id]=n}if(r.multiMaterials)for(t=0,a=r.multiMaterials.length;t<a;t++)o=r.multiMaterials[t],console.warn("THREE.BabylonLoader: Multi materials not yet supported."),e[o.id]=new THREE.MeshPhongMaterial;return e}(r))}};