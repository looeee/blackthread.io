THREE.Face3.prototype.set=function(e,r,t){this.a=e,this.b=r,this.c=t};var TypedArrayHelper=function(e,r,t,i,s,n){this.array_type=i,this.register_type=t,this.unit_size=s,this.accessors=n,this.buffer=new i(e*s),this.register=[],this.length=0,this.real_length=e,this.available_registers=r;for(var a=0;a<r;a++)this.register.push(new t)};function convertGeometryToIndexedBuffer(e){for(var r=new THREE.BufferGeometry,t=new TypedArrayHelper(e.vertices.length,0,THREE.Vector3,Float32Array,3,["x","y","z"]),i=new TypedArrayHelper(e.faces.length,0,THREE.Face3,Uint32Array,3,["a","b","c"]),s=new TypedArrayHelper(3*e.faceVertexUvs[0].length*3,0,THREE.Vector2,Float32Array,2,["x","y"]),n=0,a=e.vertices.length;n<a;n++)t.push_element(e.vertices[n]);for(n=0,a=e.faces.length;n<a;n++)i.push_element(e.faces[n]);for(n=0,a=e.faceVertexUvs[0].length;n<a;n++)s.push_element(e.faceVertexUvs[0][n][0]),s.push_element(e.faceVertexUvs[0][n][1]),s.push_element(e.faceVertexUvs[0][n][2]);return i.trim_size(),t.trim_size(),s.trim_size(),r.setIndex(new THREE.BufferAttribute(i.buffer,3)),r.addAttribute("position",new THREE.BufferAttribute(t.buffer,3)),r.addAttribute("uv",new THREE.BufferAttribute(s.buffer,2)),r}function compute_vertex_normals(e){var r=["x","y","z"],t=new TypedArrayHelper(0,5,THREE.Vector3,Float32Array,3,r),i=new TypedArrayHelper(0,3,THREE.Face3,Uint32Array,3,["a","b","c"]);t.from_existing(e.getAttribute("position").array);var s,n=new TypedArrayHelper(3*t.length,4,THREE.Vector3,Float32Array,3,r),a=new TypedArrayHelper(t.length,1,function(){this.x=0},Float32Array,1,["x"]);n.length=t.length,i.from_existing(e.index.array);for(var g=[0,0,0],o=0,f=i.length;o<f;o++)i.index_to_register(o,0),t.index_to_register(i.register[0].a,0),t.index_to_register(i.register[0].b,1),t.index_to_register(i.register[0].c,2),n.register[0].subVectors(t.register[1],t.register[0]),n.register[1].subVectors(t.register[2],t.register[1]),n.register[0].cross(n.register[1]),s=Math.abs(n.register[0].length()),a.buffer[i.register[0].a]+=s,a.buffer[i.register[0].b]+=s,a.buffer[i.register[0].c]+=s;for(o=0,f=i.length;o<f;o++)i.index_to_register(o,0),t.index_to_register(i.register[0].a,0),t.index_to_register(i.register[0].b,1),t.index_to_register(i.register[0].c,2),n.register[0].subVectors(t.register[1],t.register[0]),n.register[1].subVectors(t.register[2],t.register[0]),n.register[3].set(0,0,0),n.register[3].x=n.register[0].y*n.register[1].z-n.register[0].z*n.register[1].y,n.register[3].y=n.register[0].z*n.register[1].x-n.register[0].x*n.register[1].z,n.register[3].z=n.register[0].x*n.register[1].y-n.register[0].y*n.register[1].x,n.register[0].cross(n.register[1]),s=Math.abs(n.register[0].length()),g[0]=s/a.buffer[i.register[0].a],g[1]=s/a.buffer[i.register[0].b],g[2]=s/a.buffer[i.register[0].c],n.buffer[3*i.register[0].a+0]+=n.register[3].x*g[0],n.buffer[3*i.register[0].a+1]+=n.register[3].y*g[0],n.buffer[3*i.register[0].a+2]+=n.register[3].z*g[0],n.buffer[3*i.register[0].b+0]+=n.register[3].x*g[1],n.buffer[3*i.register[0].b+1]+=n.register[3].y*g[1],n.buffer[3*i.register[0].b+2]+=n.register[3].z*g[1],n.buffer[3*i.register[0].c+0]+=n.register[3].x*g[2],n.buffer[3*i.register[0].c+1]+=n.register[3].y*g[2],n.buffer[3*i.register[0].c+2]+=n.register[3].z*g[2];n.trim_size(),e.addAttribute("normal",new THREE.BufferAttribute(n.buffer,3))}function unIndexIndexedGeometry(e){var r=["x","y","z"],t=["x","y"],i=new TypedArrayHelper(0,3,THREE.Vector3,Float32Array,3,r),s=new TypedArrayHelper(0,3,THREE.Face3,Uint32Array,3,["a","b","c"]),n=new TypedArrayHelper(0,3,THREE.Vector2,Float32Array,2,t),a=new TypedArrayHelper(0,3,THREE.Vector3,Float32Array,3,r);i.from_existing(e.getAttribute("position").array),s.from_existing(e.index.array),n.from_existing(e.getAttribute("uv").array),compute_vertex_normals(e),a.from_existing(e.getAttribute("normal").array);for(var g=new TypedArrayHelper(3*s.length,3,THREE.Vector3,Float32Array,3,r),o=new TypedArrayHelper(3*s.length,3,THREE.Vector3,Float32Array,3,r),f=new TypedArrayHelper(3*s.length,3,THREE.Vector2,Float32Array,2,t),u=0,h=s.length;u<h;u++)s.index_to_register(u,0),i.index_to_register(s.register[0].a,0),i.index_to_register(s.register[0].b,1),i.index_to_register(s.register[0].c,2),g.push_element(i.register[0]),g.push_element(i.register[1]),g.push_element(i.register[2]),0!==n.length&&(n.index_to_register(3*u+0,0),n.index_to_register(3*u+1,1),n.index_to_register(3*u+2,2),f.push_element(n.register[0]),f.push_element(n.register[1]),f.push_element(n.register[2])),a.index_to_register(s.register[0].a,0),a.index_to_register(s.register[0].b,1),a.index_to_register(s.register[0].c,2),o.push_element(a.register[0]),o.push_element(a.register[1]),o.push_element(a.register[2]);return g.trim_size(),f.trim_size(),o.trim_size(),e.index=null,e.addAttribute("position",new THREE.BufferAttribute(g.buffer,3)),e.addAttribute("normal",new THREE.BufferAttribute(o.buffer,3)),0!==f.length&&e.addAttribute("uv",new THREE.BufferAttribute(f.buffer,2)),e}TypedArrayHelper.prototype={constructor:TypedArrayHelper,index_to_register:function(e,r,t){var i=e*this.unit_size;if(r>=this.available_registers)throw new Error("THREE.BufferSubdivisionModifier: Not enough registers in TypedArrayHelper.");if(e>this.length)throw new Error("THREE.BufferSubdivisionModifier: Index is out of range in TypedArrayHelper.");for(var s=0;s<this.unit_size;s++)this.register[r][this.accessors[s]]=this.buffer[i+s]},resize:function(e){var r;(0===e&&(e=8),e<this.length)?this.buffer=this.buffer.subarray(0,this.length*this.unit_size):this.buffer.length<e*this.unit_size?((r=new this.array_type(e*this.unit_size)).set(this.buffer),this.buffer=r,this.real_length=e):((r=new this.array_type(e*this.unit_size)).set(this.buffer.subarray(0,this.length*this.unit_size)),this.buffer=r,this.real_length=e)},from_existing:function(e){var r=e.length;this.buffer=new this.array_type(r),this.buffer.set(e),this.length=e.length/this.unit_size,this.real_length=this.length},push_element:function(e){this.length+1>this.real_length&&this.resize(2*this.real_length);for(var r=this.length*this.unit_size,t=0;t<this.unit_size;t++)this.buffer[r+t]=e[this.accessors[t]];this.length++},trim_size:function(){this.length<this.real_length&&this.resize(this.length)}},THREE.BufferSubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e},THREE.BufferSubdivisionModifier.prototype.modify=function(e){e instanceof THREE.Geometry?(e.mergeVertices(),void 0===e.normals&&(e.normals=[]),e=convertGeometryToIndexedBuffer(e)):e instanceof THREE.BufferGeometry||console.error("THREE.BufferSubdivisionModifier: Geometry is not an instance of THREE.BufferGeometry or THREE.Geometry");for(var r=this.subdivisions;r-- >0;)this.smooth(e);return unIndexIndexedGeometry(e)};var edge_type=function(e,r){this.a=e,this.b=r,this.faces=[],this.newEdge=null};!function(){var e=["a","b","c"],r=["x","y","z"],t=["x","y"];function i(e,r,t){return t[Math.min(e,r)+"_"+Math.max(e,r)]}function s(e,r,t,i,s,n){var a,g=Math.min(e,r),o=Math.max(e,r),f=g+"_"+o;f in i?a=i[f]:(a=new edge_type(g,o),i[f]=a),a.faces.push(s),n[e].edges.push(a),n[r].edges.push(a)}function n(e,r){e.push_element(r)}function a(e,r){return Math.abs(r-e)/2+Math.min(e,r)}function g(e,r,t,i){e.push_element(r),e.push_element(t),e.push_element(i)}THREE.BufferSubdivisionModifier.prototype.smooth=function(o){var f,u,h,l,y,_,d,b,c,p,E,x,m;f=new TypedArrayHelper(0,3,THREE.Vector3,Float32Array,3,r),u=new TypedArrayHelper(0,3,THREE.Face3,Uint32Array,3,e),h=new TypedArrayHelper(0,3,THREE.Vector2,Float32Array,2,t),f.from_existing(o.getAttribute("position").array),u.from_existing(o.index.array),h.from_existing(o.getAttribute("uv").array);var A,T,H,v,w,R,z,V=!1;void 0!==h&&0!==h.length&&(V=!0),function(e,r,t,i){var n,a,g;for(n=0,a=e.length;n<a;n++)t[n]={edges:[]};for(n=0,a=r.length;n<a;n++)r.index_to_register(n,0),s((g=r.register[0]).a,g.b,0,i,n,t),s(g.b,g.c,0,i,n,t),s(g.c,g.a,0,i,n,t)}(f,u,x=new Array(f.length),m={});var F=(l=new TypedArrayHelper(2*o.getAttribute("position").array.length/3,2,THREE.Vector3,Float32Array,3,r)).register[1];for(b in m){for(T=m[b],H=l.register[0],w=3/8,R=1/8,2!==(z=T.faces.length)&&(w=.5,R=0),f.index_to_register(T.a,0),f.index_to_register(T.b,1),H.addVectors(f.register[0],f.register[1]).multiplyScalar(w),F.set(0,0,0),p=0;p<z;p++){for(u.index_to_register(T.faces[p],0),v=u.register[0],E=0;E<3&&(f.index_to_register(v[e[E]],2),A=f.register[2],v[e[E]]===T.a||v[e[E]]===T.b);E++);F.add(A)}F.multiplyScalar(R),H.add(F),T.newEdge=l.length,l.push_element(H)}var B,M,G,S,I,U,N,j,k,q,C=l.length;for(b=0,c=f.length;b<c;b++){for(f.index_to_register(b,0,r),U=f.register[0],3===(d=(I=x[b].edges).length)?B=3/16:d>3&&(B=3/(8*d)),M=1-d*B,G=B,d<=2&&2===d&&(M=.75,G=1/8),N=U.multiplyScalar(M),F.set(0,0,0),p=0;p<d;p++)A=(S=I[p]).a!==b?S.a:S.b,f.index_to_register(A,1,r),F.add(f.register[1]);F.multiplyScalar(G),N.add(F),l.push_element(N,r)}y=new TypedArrayHelper(4*o.index.array.length/3,1,THREE.Face3,Float32Array,3,e);var D=(_=new TypedArrayHelper(4*o.getAttribute("uv").array.length/2,3,THREE.Vector2,Float32Array,2,t)).register[0],J=_.register[1],K=_.register[2],L=y.register[0];for(b=0,c=u.length;b<c;b++)if(u.index_to_register(b,0),j=i((v=u.register[0]).a,v.b,m).newEdge,k=i(v.b,v.c,m).newEdge,q=i(v.c,v.a,m).newEdge,L.set(j,k,q),n(y,L),L.set(v.a+C,j,q),n(y,L),L.set(v.b+C,k,j),n(y,L),L.set(v.c+C,q,k),n(y,L),!0===V){h.index_to_register(3*b+0,0),h.index_to_register(3*b+1,1),h.index_to_register(3*b+2,2);var O=h.register[0],P=h.register[1],Q=h.register[2];D.set(a(O.x,P.x),a(O.y,P.y)),J.set(a(P.x,Q.x),a(P.y,Q.y)),K.set(a(O.x,Q.x),a(O.y,Q.y)),g(_,D,J,K),g(_,O,D,K),g(_,P,J,D),g(_,Q,K,J)}y.trim_size(),l.trim_size(),_.trim_size(),o.setIndex(new THREE.BufferAttribute(y.buffer,3)),o.addAttribute("position",new THREE.BufferAttribute(l.buffer,3)),o.addAttribute("uv",new THREE.BufferAttribute(_.buffer,2))}}();