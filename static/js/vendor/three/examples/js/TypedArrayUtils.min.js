THREE.TypedArrayUtils={},THREE.TypedArrayUtils.quicksortIP=function(t,n,e){for(var o,r,i=[],s=-1,h=0,c=t.length/n-1,u=0,l=0,f=0,a=function(e,o){for(e*=n,o*=n,f=0;f<n;f++)u=t[e+f],t[e+f]=t[o+f],t[o+f]=u},p=new Float32Array(n),y=new Float32Array(n);;)if(c-h<=25){for(r=h+1;r<=c;r++){for(l=0;l<n;l++)p[l]=t[r*n+l];for(o=r-1;o>=h&&t[o*n+e]>p[e];){for(l=0;l<n;l++)t[(o+1)*n+l]=t[o*n+l];o--}for(l=0;l<n;l++)t[(o+1)*n+l]=p[l]}if(-1==s)break;c=i[s--],h=i[s--]}else{for(r=c,a(h+c>>1,o=h+1),t[h*n+e]>t[c*n+e]&&a(h,c),t[o*n+e]>t[c*n+e]&&a(o,c),t[h*n+e]>t[o*n+e]&&a(h,o),l=0;l<n;l++)y[l]=t[o*n+l];for(;;){do{o++}while(t[o*n+e]<y[e]);do{r--}while(t[r*n+e]>y[e]);if(r<o)break;a(o,r)}for(l=0;l<n;l++)t[(h+1)*n+l]=t[r*n+l],t[r*n+l]=y[l];c-o+1>=r-h?(i[++s]=o,i[++s]=c,c=r-1):(i[++s]=h,i[++s]=r-1,h=o)}return t},THREE.TypedArrayUtils.Kdtree=function(t,n,e){var o=this,r=0,i=function(t,n){return t.subarray(n*e,n*e+e)};this.root=function t(n,s,h,c){var u,l,f=s%e,a=n.length/e;return s>r&&(r=s),0===a?null:1===a?new o.Node(i(n,0),s,h,c):(THREE.TypedArrayUtils.quicksortIP(n,e,f),u=Math.floor(a/2),(l=new o.Node(i(n,u),s,h,u+c)).left=t(n.subarray(0,u*e),s+1,l,c),l.right=t(n.subarray((u+1)*e,n.length),s+1,l,c+u+1),l)}(t,0,null,0),this.getMaxDepth=function(){return r},this.nearest=function(t,r,i){var s,h,c;if(c=new THREE.TypedArrayUtils.Kdtree.BinaryHeap(function(t){return-t[1]}),i)for(s=0;s<r;s+=1)c.push([null,i]);for(function o(i){var s,h,u,l,f=i.depth%e,a=n(t,i.obj),p=[];function y(t,n){c.push([t,n]),c.size()>r&&c.pop()}for(l=0;l<e;l+=1)l===i.depth%e?p[l]=t[l]:p[l]=i.obj[l];h=n(p,i.obj),null!==i.right||null!==i.left?(o(s=null===i.right?i.left:null===i.left?i.right:t[f]<i.obj[f]?i.left:i.right),(c.size()<r||a<c.peek()[1])&&y(i,a),(c.size()<r||Math.abs(h)<c.peek()[1])&&null!==(u=s===i.left?i.right:i.left)&&o(u)):(c.size()<r||a<c.peek()[1])&&y(i,a)}(o.root),h=[],s=0;s<r;s+=1)c.content[s][0]&&h.push([c.content[s][0],c.content[s][1]]);return h}},THREE.TypedArrayUtils.Kdtree.prototype.Node=function(t,n,e,o){this.obj=t,this.left=null,this.right=null,this.parent=e,this.depth=n,this.pos=o},THREE.TypedArrayUtils.Kdtree.BinaryHeap=function(t){this.content=[],this.scoreFunction=t},THREE.TypedArrayUtils.Kdtree.BinaryHeap.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,e=0;e<n;e++)if(this.content[e]==t){var o=this.content.pop();return void(e!=n-1&&(this.content[e]=o,this.scoreFunction(o)<this.scoreFunction(t)?this.bubbleUp(e):this.sinkDown(e)))}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var e=Math.floor((t+1)/2)-1,o=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(o)))break;this.content[e]=n,this.content[t]=o,t=e}},sinkDown:function(t){for(var n=this.content.length,e=this.content[t],o=this.scoreFunction(e);;){var r=2*(t+1),i=r-1,s=null;if(i<n){var h=this.content[i],c=this.scoreFunction(h);c<o&&(s=i)}if(r<n){var u=this.content[r];this.scoreFunction(u)<(null===s?o:c)&&(s=r)}if(null===s)break;this.content[t]=this.content[s],this.content[s]=e,t=s}}};