THREE.MMDPhysics=function(t,e){void 0===e&&(e={}),this.mesh=t,this.helper=new THREE.MMDPhysics.ResourceHelper,this.unitStep=void 0!==e.unitStep?e.unitStep:1/65,this.maxStepNum=void 0!==e.maxStepNum?e.maxStepNum:3,this.world=void 0!==e.world?e.world:null,this.bodies=[],this.constraints=[],this.init(t)},THREE.MMDPhysics.prototype={constructor:THREE.MMDPhysics,init:function(t){var e=t.parent;null!==e&&e.remove(t);var r=this.helper,i=r.allocThreeVector3(),o=r.allocThreeEuler(),s=r.allocThreeVector3();i.copy(t.position),o.copy(t.rotation),s.copy(t.scale),t.position.set(0,0,0),t.rotation.set(0,0,0),t.scale.set(1,1,1),t.updateMatrixWorld(!0),null===this.world&&this.initWorld(),this.initRigidBodies(),this.initConstraints(),null!==e&&e.add(t),t.position.copy(i),t.rotation.copy(o),t.scale.copy(s),t.updateMatrixWorld(!0),this.reset(),r.freeThreeVector3(i),r.freeThreeEuler(o),r.freeThreeVector3(s)},initWorld:function(){var t=new Ammo.btDefaultCollisionConfiguration,e=new Ammo.btCollisionDispatcher(t),r=new Ammo.btDbvtBroadphase,i=new Ammo.btSequentialImpulseConstraintSolver,o=new Ammo.btDiscreteDynamicsWorld(e,r,i,t);o.setGravity(new Ammo.btVector3(0,-98,0)),this.world=o},initRigidBodies:function(){for(var t=this.mesh.geometry.rigidBodies,e=0;e<t.length;e++){var r=new THREE.MMDPhysics.RigidBody(this.mesh,this.world,t[e],this.helper);this.bodies.push(r)}},initConstraints:function(){for(var t=this.mesh.geometry.constraints,e=0;e<t.length;e++){var r=t[e],i=this.bodies[r.rigidBodyIndex1],o=this.bodies[r.rigidBodyIndex2],s=new THREE.MMDPhysics.Constraint(this.mesh,this.world,i,o,r,this.helper);this.constraints.push(s)}},update:function(t){this.updateRigidBodies(),this.stepSimulation(t),this.updateBones()},stepSimulation:function(t){var e=this.unitStep,r=t,i=1+(t/e|0);r<e&&(r=e,i=1),i>this.maxStepNum&&(i=this.maxStepNum),this.world.stepSimulation(r,i,e)},updateRigidBodies:function(){for(var t=0;t<this.bodies.length;t++)this.bodies[t].updateFromBone()},updateBones:function(){for(var t=0;t<this.bodies.length;t++)this.bodies[t].updateBone()},reset:function(){for(var t=0;t<this.bodies.length;t++)this.bodies[t].reset()},warmup:function(t){for(var e=0;e<t;e++)this.update(1/60)}},THREE.MMDPhysics.ResourceHelper=function(){this.threeVector3s=[],this.threeMatrix4s=[],this.threeQuaternions=[],this.threeEulers=[],this.transforms=[],this.quaternions=[],this.vector3s=[]},THREE.MMDPhysics.ResourceHelper.prototype={allocThreeVector3:function(){return this.threeVector3s.length>0?this.threeVector3s.pop():new THREE.Vector3},freeThreeVector3:function(t){this.threeVector3s.push(t)},allocThreeMatrix4:function(){return this.threeMatrix4s.length>0?this.threeMatrix4s.pop():new THREE.Matrix4},freeThreeMatrix4:function(t){this.threeMatrix4s.push(t)},allocThreeQuaternion:function(){return this.threeQuaternions.length>0?this.threeQuaternions.pop():new THREE.Quaternion},freeThreeQuaternion:function(t){this.threeQuaternions.push(t)},allocThreeEuler:function(){return this.threeEulers.length>0?this.threeEulers.pop():new THREE.Euler},freeThreeEuler:function(t){this.threeEulers.push(t)},allocTransform:function(){return this.transforms.length>0?this.transforms.pop():new Ammo.btTransform},freeTransform:function(t){this.transforms.push(t)},allocQuaternion:function(){return this.quaternions.length>0?this.quaternions.pop():new Ammo.btQuaternion},freeQuaternion:function(t){this.quaternions.push(t)},allocVector3:function(){return this.vector3s.length>0?this.vector3s.pop():new Ammo.btVector3},freeVector3:function(t){this.vector3s.push(t)},setIdentity:function(t){t.setIdentity()},getBasis:function(t){var e=this.allocQuaternion();return t.getBasis().getRotation(e),e},getBasisAsMatrix3:function(t){var e=this.getBasis(t),r=this.quaternionToMatrix3(e);return this.freeQuaternion(e),r},getOrigin:function(t){return t.getOrigin()},setOrigin:function(t,e){t.getOrigin().setValue(e.x(),e.y(),e.z())},copyOrigin:function(t,e){var r=e.getOrigin();this.setOrigin(t,r)},setBasis:function(t,e){t.setRotation(e)},setBasisFromMatrix3:function(t,e){var r=this.matrix3ToQuaternion(e);this.setBasis(t,r),this.freeQuaternion(r)},setOriginFromArray3:function(t,e){t.getOrigin().setValue(e[0],e[1],e[2])},setOriginFromThreeVector3:function(t,e){t.getOrigin().setValue(e.x,e.y,e.z)},setBasisFromArray3:function(t,e){var r=this.allocThreeQuaternion(),i=this.allocThreeEuler();i.set(e[0],e[1],e[2]),this.setBasisFromThreeQuaternion(t,r.setFromEuler(i)),this.freeThreeEuler(i),this.freeThreeQuaternion(r)},setBasisFromThreeQuaternion:function(t,e){var r=this.allocQuaternion();r.setX(e.x),r.setY(e.y),r.setZ(e.z),r.setW(e.w),this.setBasis(t,r),this.freeQuaternion(r)},multiplyTransforms:function(t,e){var r=this.allocTransform();this.setIdentity(r);var i=this.getBasisAsMatrix3(t),o=this.getBasisAsMatrix3(e),s=this.getOrigin(t),n=this.getOrigin(e),a=this.multiplyMatrix3ByVector3(i,n),h=this.addVector3(a,s);this.setOrigin(r,h);var l=this.multiplyMatrices3(i,o);return this.setBasisFromMatrix3(r,l),this.freeVector3(a),this.freeVector3(h),r},inverseTransform:function(t){var e=this.allocTransform(),r=this.getBasisAsMatrix3(t),i=this.getOrigin(t),o=this.transposeMatrix3(r),s=this.negativeVector3(i),n=this.multiplyMatrix3ByVector3(o,s);return this.setOrigin(e,n),this.setBasisFromMatrix3(e,o),this.freeVector3(s),this.freeVector3(n),e},multiplyMatrices3:function(t,e){var r=[],i=this.rowOfMatrix3(t,0),o=this.rowOfMatrix3(t,1),s=this.rowOfMatrix3(t,2),n=this.columnOfMatrix3(e,0),a=this.columnOfMatrix3(e,1),h=this.columnOfMatrix3(e,2);return r[0]=this.dotVectors3(i,n),r[1]=this.dotVectors3(i,a),r[2]=this.dotVectors3(i,h),r[3]=this.dotVectors3(o,n),r[4]=this.dotVectors3(o,a),r[5]=this.dotVectors3(o,h),r[6]=this.dotVectors3(s,n),r[7]=this.dotVectors3(s,a),r[8]=this.dotVectors3(s,h),this.freeVector3(i),this.freeVector3(o),this.freeVector3(s),this.freeVector3(n),this.freeVector3(a),this.freeVector3(h),r},addVector3:function(t,e){var r=this.allocVector3();return r.setValue(t.x()+e.x(),t.y()+e.y(),t.z()+e.z()),r},dotVectors3:function(t,e){return t.x()*e.x()+t.y()*e.y()+t.z()*e.z()},rowOfMatrix3:function(t,e){var r=this.allocVector3();return r.setValue(t[3*e+0],t[3*e+1],t[3*e+2]),r},columnOfMatrix3:function(t,e){var r=this.allocVector3();return r.setValue(t[e+0],t[e+3],t[e+6]),r},negativeVector3:function(t){var e=this.allocVector3();return e.setValue(-t.x(),-t.y(),-t.z()),e},multiplyMatrix3ByVector3:function(t,e){var r=this.allocVector3(),i=this.rowOfMatrix3(t,0),o=this.rowOfMatrix3(t,1),s=this.rowOfMatrix3(t,2),n=this.dotVectors3(i,e),a=this.dotVectors3(o,e),h=this.dotVectors3(s,e);return r.setValue(n,a,h),this.freeVector3(i),this.freeVector3(o),this.freeVector3(s),r},transposeMatrix3:function(t){var e=[];return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],e},quaternionToMatrix3:function(t){var e=[],r=t.x(),i=t.y(),o=t.z(),s=t.w(),n=r*r,a=i*i,h=o*o,l=r*i,c=i*o,u=o*r,f=r*s,m=i*s,p=o*s;return e[0]=1-2*(a+h),e[1]=2*(l-p),e[2]=2*(u+m),e[3]=2*(l+p),e[4]=1-2*(h+n),e[5]=2*(c-f),e[6]=2*(u-m),e[7]=2*(c+f),e[8]=1-2*(n+a),e},matrix3ToQuaternion:function(t){var e,r,i,o,s,n=t[0]+t[4]+t[8];n>0?(s=.25*(e=2*Math.sqrt(n+1)),r=(t[7]-t[5])/e,i=(t[2]-t[6])/e,o=(t[3]-t[1])/e):t[0]>t[4]&&t[0]>t[8]?(e=2*Math.sqrt(1+t[0]-t[4]-t[8]),s=(t[7]-t[5])/e,r=.25*e,i=(t[1]+t[3])/e,o=(t[2]+t[6])/e):t[4]>t[8]?(e=2*Math.sqrt(1+t[4]-t[0]-t[8]),s=(t[2]-t[6])/e,r=(t[1]+t[3])/e,i=.25*e,o=(t[5]+t[7])/e):(e=2*Math.sqrt(1+t[8]-t[0]-t[4]),s=(t[3]-t[1])/e,r=(t[2]+t[6])/e,i=(t[5]+t[7])/e,o=.25*e);var a=this.allocQuaternion();return a.setX(r),a.setY(i),a.setZ(o),a.setW(s),a}},THREE.MMDPhysics.RigidBody=function(t,e,r,i){this.mesh=t,this.world=e,this.params=r,this.helper=i,this.body=null,this.bone=null,this.boneOffsetForm=null,this.boneOffsetFormInverse=null,this.init()},THREE.MMDPhysics.RigidBody.prototype={constructor:THREE.MMDPhysics.RigidBody,init:function(){var t=this.helper,e=this.params,r=this.mesh.skeleton.bones,i=-1===e.boneIndex?new THREE.Bone:r[e.boneIndex],o=function(t){switch(t.shapeType){case 0:return new Ammo.btSphereShape(t.width);case 1:return new Ammo.btBoxShape(new Ammo.btVector3(t.width,t.height,t.depth));case 2:return new Ammo.btCapsuleShape(t.width,t.height);default:throw"unknown shape type "+t.shapeType}}(e),s=0===e.type?0:e.weight,n=t.allocVector3();n.setValue(0,0,0),0!==s&&o.calculateLocalInertia(s,n);var a=t.allocTransform();t.setIdentity(a),t.setOriginFromArray3(a,e.position),t.setBasisFromArray3(a,e.rotation);var h=t.allocThreeVector3(),l=t.allocTransform();t.setIdentity(l),t.setOriginFromThreeVector3(l,i.getWorldPosition(h));var c=t.multiplyTransforms(l,a),u=new Ammo.btDefaultMotionState(c),f=new Ammo.btRigidBodyConstructionInfo(s,u,o,n);f.set_m_friction(e.friction),f.set_m_restitution(e.restitution);var m=new Ammo.btRigidBody(f);0===e.type&&(m.setCollisionFlags(2|m.getCollisionFlags()),m.setActivationState(4)),m.setDamping(e.positionDamping,e.rotationDamping),m.setSleepingThresholds(0,0),this.world.addRigidBody(m,1<<e.groupIndex,e.groupTarget),this.body=m,this.bone=i,this.boneOffsetForm=a,this.boneOffsetFormInverse=t.inverseTransform(a),t.freeVector3(n),t.freeTransform(c),t.freeTransform(l),t.freeThreeVector3(h)},reset:function(){this.setTransformFromBone()},updateFromBone:function(){-1!==this.params.boneIndex&&0===this.params.type&&this.setTransformFromBone()},updateBone:function(){0!==this.params.type&&-1!==this.params.boneIndex&&(this.updateBoneRotation(),1===this.params.type&&this.updateBonePosition(),this.bone.updateMatrixWorld(!0),2===this.params.type&&this.setPositionFromBone())},getBoneTransform:function(){var t=this.helper,e=t.allocThreeVector3(),r=t.allocThreeQuaternion();this.bone.getWorldPosition(e),this.bone.getWorldQuaternion(r);var i=t.allocTransform();t.setOriginFromThreeVector3(i,e),t.setBasisFromThreeQuaternion(i,r);var o=t.multiplyTransforms(i,this.boneOffsetForm);return t.freeTransform(i),t.freeThreeQuaternion(r),t.freeThreeVector3(e),o},getWorldTransformForBone:function(){var t=this.helper,e=t.allocTransform();this.body.getMotionState().getWorldTransform(e);var r=t.multiplyTransforms(e,this.boneOffsetFormInverse);return t.freeTransform(e),r},setTransformFromBone:function(){var t=this.helper,e=this.getBoneTransform();this.body.setCenterOfMassTransform(e),this.body.getMotionState().setWorldTransform(e),t.freeTransform(e)},setPositionFromBone:function(){var t=this.helper,e=this.getBoneTransform(),r=t.allocTransform();this.body.getMotionState().getWorldTransform(r),t.copyOrigin(r,e),this.body.setCenterOfMassTransform(r),this.body.getMotionState().setWorldTransform(r),t.freeTransform(r),t.freeTransform(e)},updateBoneRotation:function(){this.bone.updateMatrixWorld(!0);var t=this.helper,e=this.getWorldTransformForBone(),r=t.getBasis(e),i=t.allocThreeQuaternion(),o=t.allocThreeQuaternion(),s=t.allocThreeQuaternion();i.set(r.x(),r.y(),r.z(),r.w()),o.setFromRotationMatrix(this.bone.matrixWorld),o.conjugate(),o.multiply(i),s.setFromRotationMatrix(this.bone.matrix),this.bone.quaternion.copy(o.multiply(s)),t.freeThreeQuaternion(i),t.freeThreeQuaternion(o),t.freeThreeQuaternion(s),t.freeQuaternion(r),t.freeTransform(e)},updateBonePosition:function(){var t=this.helper,e=this.getWorldTransformForBone(),r=t.allocThreeVector3(),i=t.getOrigin(e);r.set(i.x(),i.y(),i.z());var o=this.bone.worldToLocal(r);this.bone.position.add(o),t.freeThreeVector3(r),t.freeTransform(e)}},THREE.MMDPhysics.Constraint=function(t,e,r,i,o,s){this.mesh=t,this.world=e,this.bodyA=r,this.bodyB=i,this.params=o,this.helper=s,this.constraint=null,this.init()},THREE.MMDPhysics.Constraint.prototype={constructor:THREE.MMDPhysics.Constraint,init:function(){var t=this.helper,e=this.params,r=this.bodyA,i=this.bodyB,o=t.allocTransform();t.setIdentity(o),t.setOriginFromArray3(o,e.position),t.setBasisFromArray3(o,e.rotation);var s=t.allocTransform(),n=t.allocTransform();r.body.getMotionState().getWorldTransform(s),i.body.getMotionState().getWorldTransform(n);var a=t.inverseTransform(s),h=t.inverseTransform(n),l=t.multiplyTransforms(a,o),c=t.multiplyTransforms(h,o),u=new Ammo.btGeneric6DofSpringConstraint(r.body,i.body,l,c,!0),f=t.allocVector3(),m=t.allocVector3(),p=t.allocVector3(),d=t.allocVector3();f.setValue(e.translationLimitation1[0],e.translationLimitation1[1],e.translationLimitation1[2]),m.setValue(e.translationLimitation2[0],e.translationLimitation2[1],e.translationLimitation2[2]),p.setValue(e.rotationLimitation1[0],e.rotationLimitation1[1],e.rotationLimitation1[2]),d.setValue(e.rotationLimitation2[0],e.rotationLimitation2[1],e.rotationLimitation2[2]),u.setLinearLowerLimit(f),u.setLinearUpperLimit(m),u.setAngularLowerLimit(p),u.setAngularUpperLimit(d);for(var T=0;T<3;T++)0!==e.springPosition[T]&&(u.enableSpring(T,!0),u.setStiffness(T,e.springPosition[T]));for(T=0;T<3;T++)0!==e.springRotation[T]&&(u.enableSpring(T+3,!0),u.setStiffness(T+3,e.springRotation[T]));if(void 0!==u.setParam)for(T=0;T<6;T++)u.setParam(2,.475,T);this.world.addConstraint(u,!0),this.constraint=u,t.freeTransform(o),t.freeTransform(s),t.freeTransform(n),t.freeTransform(a),t.freeTransform(h),t.freeTransform(l),t.freeTransform(c),t.freeVector3(f),t.freeVector3(m),t.freeVector3(p),t.freeVector3(d)}},THREE.MMDPhysicsHelper=function(t){if(void 0===t.physics||void 0===t.geometry.rigidBodies)throw"THREE.MMDPhysicsHelper requires physics in mesh and rigidBodies in mesh.geometry.";THREE.Object3D.call(this),this.root=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.materials=[],this.materials.push(new THREE.MeshBasicMaterial({color:new THREE.Color(16746632),wireframe:!0,depthTest:!1,depthWrite:!1,opacity:.25,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:new THREE.Color(8978312),wireframe:!0,depthTest:!1,depthWrite:!1,opacity:.25,transparent:!0})),this.materials.push(new THREE.MeshBasicMaterial({color:new THREE.Color(8947967),wireframe:!0,depthTest:!1,depthWrite:!1,opacity:.25,transparent:!0})),this._init(),this.update()},THREE.MMDPhysicsHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.MMDPhysicsHelper.prototype.constructor=THREE.MMDPhysicsHelper,THREE.MMDPhysicsHelper.prototype._init=function(){var t=this.root.geometry.rigidBodies;function e(t){switch(t.shapeType){case 0:return new THREE.SphereBufferGeometry(t.width,16,8);case 1:return new THREE.BoxBufferGeometry(2*t.width,2*t.height,2*t.depth,8,8,8);case 2:return new function(t,e,r,i){var o=new THREE.CylinderBufferGeometry(t,t,e,r,i,!0),s=new THREE.Mesh(new THREE.SphereBufferGeometry(t,r,i,0,2*Math.PI,0,Math.PI/2)),n=new THREE.Mesh(new THREE.SphereBufferGeometry(t,r,i,0,2*Math.PI,Math.PI/2,Math.PI/2));return s.position.set(0,e/2,0),n.position.set(0,-e/2,0),s.updateMatrix(),n.updateMatrix(),o.merge(s.geometry,s.matrix),o.merge(n.geometry,n.matrix),o}(t.width,t.height,16,8);default:return null}}for(var r=0,i=t.length;r<i;r++){var o=t[r];this.add(new THREE.Mesh(e(o),this.materials[o.type]))}},THREE.MMDPhysicsHelper.prototype.update=function(){var t,e,r=(u=this.root).geometry.rigidBodies,i=u.physics.bodies,o=(new THREE.Matrix4).getInverse(u.matrixWorld),s=new THREE.Vector3,n=new THREE.Quaternion,a=new THREE.Quaternion;for(var h=0,l=r.length;h<l;h++){var c=i[h].body,u=this.children[h],f=c.getCenterOfMassTransform();u.position.copy((e=f.getOrigin(),s.set(e.x(),e.y(),e.z()),s.applyMatrix4(o),s)),u.quaternion.copy((t=f.getRotation(),n.set(t.x(),t.y(),t.z(),t.w()),a.setFromRotationMatrix(o),a.multiply(n),a))}};