THREE.CCDIKSolver=function(e){this.mesh=e,this._valid()},THREE.CCDIKSolver.prototype={constructor:THREE.CCDIKSolver,_valid:function(){for(var e=this.mesh.geometry.iks,t=this.mesh.skeleton.bones,r=0,i=e.length;r<i;r++){var o,n,a=e[r],s=t[a.effector],l=a.links;o=s;for(var h=0,E=l.length;h<E;h++)n=t[l[h].index],o.parent!==n&&console.warn("THREE.CCDIKSolver: bone "+o.name+" is not the child of bone "+n.name),o=n}},_saveOriginalBonesInfo:function(){for(var e=this.mesh.skeleton.bones,t=0,r=e.length;t<r;t++){var i=e[t];void 0===i.userData.ik&&(i.userData.ik={}),i.userData.ik.originalMatrix=i.matrix.toArray()}},update:function(e){var t=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3,o=new THREE.Vector3,n=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Quaternion,l=new THREE.Vector3,h=new THREE.Vector3,E=this.mesh.skeleton.bones,p=this.mesh.geometry.iks,d=(this.mesh.geometry.bones,Math);this.mesh.updateMatrixWorld(!0),!0===e&&this._saveOriginalBonesInfo();for(var c=0,m=p.length;c<m;c++){var H=p[c],f=E[H.effector],v=E[H.target];r.setFromMatrixPosition(v.matrixWorld);for(var T=H.links,u=void 0!==H.iteration?H.iteration:1,R=0;R<u;R++){for(var g=!1,y=0,w=T.length;y<w;y++){var x=E[T[y].index];if(!1===T[y].enabled)break;var M=T[y].limitation;x.matrixWorld.decompose(a,s,l),s.inverse(),o.setFromMatrixPosition(f.matrixWorld),n.subVectors(o,a),n.applyQuaternion(s),n.normalize(),i.subVectors(r,a),i.applyQuaternion(s),i.normalize();var k=i.dot(n);if(k>1?k=1:k<-1&&(k=-1),!((k=d.acos(k))<1e-5)){if(void 0!==H.minAngle&&k<H.minAngle&&(k=H.minAngle),void 0!==H.maxAngle&&k>H.maxAngle&&(k=H.maxAngle),h.crossVectors(n,i),h.normalize(),t.setFromAxisAngle(h,k),x.quaternion.multiply(t),void 0!==M){var C=x.quaternion.w;C>1&&(C=1);var b=d.sqrt(1-C*C);x.quaternion.set(M.x*b,M.y*b,M.z*b,C)}x.updateMatrixWorld(!0),g=!0}}if(!g)break}}this.mesh.updateMatrixWorld(!0)}},THREE.CCDIKHelper=function(e){if(void 0===e.geometry.iks||void 0===e.skeleton)throw"THREE.CCDIKHelper requires iks in mesh.geometry and skeleton in mesh.";THREE.Object3D.call(this),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.sphereGeometry=new THREE.SphereBufferGeometry(.25,16,8),this.targetSphereMaterial=new THREE.MeshBasicMaterial({color:new THREE.Color(16746632),depthTest:!1,depthWrite:!1,transparent:!0}),this.effectorSphereMaterial=new THREE.MeshBasicMaterial({color:new THREE.Color(8978312),depthTest:!1,depthWrite:!1,transparent:!0}),this.linkSphereMaterial=new THREE.MeshBasicMaterial({color:new THREE.Color(8947967),depthTest:!1,depthWrite:!1,transparent:!0}),this.lineMaterial=new THREE.LineBasicMaterial({color:new THREE.Color(16711680),depthTest:!1,depthWrite:!1,transparent:!0}),this._init(),this.update()},THREE.CCDIKHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.CCDIKHelper.prototype.constructor=THREE.CCDIKHelper,THREE.CCDIKHelper.prototype._init=function(){var e=this,t=this.root.geometry.iks;function r(t){return new THREE.Line((r=t,i=new THREE.BufferGeometry,o=new Float32Array(3*(2+r.links.length)),i.addAttribute("position",new THREE.BufferAttribute(o,3)),i),e.lineMaterial);var r,i,o}for(var i=0,o=t.length;i<o;i++){var n=t[i];this.add(new THREE.Mesh(e.sphereGeometry,e.targetSphereMaterial)),this.add(new THREE.Mesh(e.sphereGeometry,e.effectorSphereMaterial));for(var a=0,s=n.links.length;a<s;a++)this.add(new THREE.Mesh(e.sphereGeometry,e.linkSphereMaterial));this.add(r(n))}},THREE.CCDIKHelper.prototype.update=function(){var e=0,t=this.root,r=t.geometry.iks,i=t.skeleton.bones,o=(new THREE.Matrix4).getInverse(t.matrixWorld),n=new THREE.Vector3;function a(e){return n.setFromMatrixPosition(e.matrixWorld),n.applyMatrix4(o),n}function s(e,t,r){var i=a(r);e[3*t+0]=i.x,e[3*t+1]=i.y,e[3*t+2]=i.z}for(var l=0,h=r.length;l<h;l++){var E=r[l],p=i[E.target],d=i[E.effector],c=this.children[e++],m=this.children[e++];c.position.copy(a(p)),m.position.copy(a(d));for(var H=0,f=E.links.length;H<f;H++){var v=i[E.links[H].index];this.children[e++].position.copy(a(v))}var T=this.children[e++],u=T.geometry.attributes.position.array;s(u,0,p),s(u,1,d);for(H=0,f=E.links.length;H<f;H++){s(u,H+2,v=i[E.links[H].index])}T.geometry.attributes.position.needsUpdate=!0}};