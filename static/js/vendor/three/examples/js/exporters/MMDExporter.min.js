THREE.MMDExporter=function(){var r;this.parseVpd=function(e,n,t){if(!0!==e.isSkinnedMesh)return console.warn("THREE.MMDExporter: parseVpd() requires SkinnedMesh instance."),null;function a(r){Math.abs(r)<1e-6&&(r=0);var e=r.toString();-1===e.indexOf(".")&&(e+=".");var n=(e+="000000").indexOf(".");return e.slice(0,n)+"."+e.slice(n+1,n+7)}function o(r){for(var e=[],n=0,t=r.length;n<t;n++)e.push(a(r[n]));return e.join(",")}e.updateMatrixWorld(!0);var i,s=e.skeleton.bones,u=((i=e.clone()).pose(),i.skeleton.bones),p=new THREE.Vector3,h=new THREE.Quaternion,c=new THREE.Quaternion,l=new THREE.Matrix4,v=[];v.push("Vocaloid Pose Data file"),v.push(""),v.push((""!==e.name?e.name.replace(/\s/g,"_"):"skin")+".osm;"),v.push(s.length+";"),v.push("");for(var d=0,f=s.length;d<f;d++){var E=s[d],M=u[d];!0===t&&void 0!==E.userData.ik&&void 0!==E.userData.ik.originalMatrix?l.fromArray(E.userData.ik.originalMatrix):l.copy(E.matrix),p.setFromMatrixPosition(l),h.setFromRotationMatrix(l);var x=p.sub(M.position).toArray(),g=c.copy(M.quaternion).conjugate().multiply(h).toArray();x[2]=-x[2],g[0]=-g[0],g[1]=-g[1],v.push("Bone"+d+"{"+E.name),v.push("  "+o(x)+";"),v.push("  "+o(g)+";"),v.push("}"),v.push("")}v.push("");var k=v.join("\n");return!0===n?function(e){if(void 0===r){var n=(new MMDParser.CharsetEncoder).s2uTable;r={};for(var t=Object.keys(n),a=0,o=t.length;a<o;a++){var i=t[a],s=n[i];i=parseInt(i),r[s]=i}}var u=[];for(a=0,o=e.length;a<o;a++){var p=e.charCodeAt(a);if(void 0===(s=r[p]))throw"cannot convert charcode 0x"+p.toString(16);s>255?(u.push(s>>8&255),u.push(255&s)):u.push(255&s)}return new Uint8Array(u)}(k):k}};