THREE.OBJExporter=function(){},THREE.OBJExporter.prototype={constructor:THREE.OBJExporter,parse:function(e){var t,r,o,n,i,a="",f=0,E=0,u=0,c=new THREE.Vector3,m=new THREE.Vector3,s=new THREE.Vector2,p=[];return e.traverse(function(e){e instanceof THREE.Mesh&&function(e){var o=0,y=0,g=0,x=e.geometry,l=new THREE.Matrix3;if(x instanceof THREE.Geometry&&(x=(new THREE.BufferGeometry).setFromObject(e)),x instanceof THREE.BufferGeometry){var H=x.getAttribute("position"),R=x.getAttribute("normal"),T=x.getAttribute("uv"),v=x.getIndex();if(a+="o "+e.name+"\n",e.material&&e.material.name&&(a+="usemtl "+e.material.name+"\n"),void 0!==H)for(t=0,n=H.count;t<n;t++,o++)c.x=H.getX(t),c.y=H.getY(t),c.z=H.getZ(t),c.applyMatrix4(e.matrixWorld),a+="v "+c.x+" "+c.y+" "+c.z+"\n";if(void 0!==T)for(t=0,n=T.count;t<n;t++,g++)s.x=T.getX(t),s.y=T.getY(t),a+="vt "+s.x+" "+s.y+"\n";if(void 0!==R)for(l.getNormalMatrix(e.matrixWorld),t=0,n=R.count;t<n;t++,y++)m.x=R.getX(t),m.y=R.getY(t),m.z=R.getZ(t),m.applyMatrix3(l),a+="vn "+m.x+" "+m.y+" "+m.z+"\n";if(null!==v)for(t=0,n=v.count;t<n;t+=3){for(i=0;i<3;i++)r=v.getX(t+i)+1,p[i]=f+r+"/"+(T?E+r:"")+"/"+(u+r);a+="f "+p.join(" ")+"\n"}else for(t=0,n=H.count;t<n;t+=3){for(i=0;i<3;i++)r=t+i+1,p[i]=f+r+"/"+(T?E+r:"")+"/"+(u+r);a+="f "+p.join(" ")+"\n"}}else console.warn("THREE.OBJExporter.parseMesh(): geometry type unsupported",x);f+=o,E+=g,u+=y}(e),e instanceof THREE.Line&&function(e){var i=0,E=e.geometry,u=e.type;if(E instanceof THREE.Geometry&&(E=(new THREE.BufferGeometry).setFromObject(e)),E instanceof THREE.BufferGeometry){var m=E.getAttribute("position");if(a+="o "+e.name+"\n",void 0!==m)for(t=0,n=m.count;t<n;t++,i++)c.x=m.getX(t),c.y=m.getY(t),c.z=m.getZ(t),c.applyMatrix4(e.matrixWorld),a+="v "+c.x+" "+c.y+" "+c.z+"\n";if("Line"===u){for(a+="l ",r=1,n=m.count;r<=n;r++)a+=f+r+" ";a+="\n"}if("LineSegments"===u)for(o=1+(r=1),n=m.count;r<n;o=(r+=2)+1)a+="l "+(f+r)+" "+(f+o)+"\n"}else console.warn("THREE.OBJExporter.parseLine(): geometry type unsupported",E);f+=i}(e)}),a}};