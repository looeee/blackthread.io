THREE.Lensflare=function(){THREE.Mesh.call(this,THREE.Lensflare.Geometry,new THREE.MeshBasicMaterial({opacity:0,transparent:!0})),this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;var e=new THREE.Vector3,i=new THREE.DataTexture(new Uint8Array(768),16,16,THREE.RGBFormat);i.minFilter=THREE.NearestFilter,i.magFilter=THREE.NearestFilter,i.wrapS=THREE.ClampToEdgeWrapping,i.wrapT=THREE.ClampToEdgeWrapping,i.needsUpdate=!0;var t=new THREE.DataTexture(new Uint8Array(768),16,16,THREE.RGBFormat);t.minFilter=THREE.NearestFilter,t.magFilter=THREE.NearestFilter,t.wrapS=THREE.ClampToEdgeWrapping,t.wrapT=THREE.ClampToEdgeWrapping,t.needsUpdate=!0;var r=THREE.Lensflare.Geometry,n=new THREE.RawShaderMaterial({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","attribute vec3 position;","void main() {","\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","void main() {","\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );","}"].join("\n"),depthTest:!0,depthWrite:!1,transparent:!1}),o=new THREE.RawShaderMaterial({uniforms:{map:{value:i},scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","attribute vec3 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","\tvUV = uv;","\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","uniform sampler2D map;","varying vec2 vUV;","void main() {","\tgl_FragColor = texture2D( map, vUV );","}"].join("\n"),depthTest:!1,depthWrite:!1,transparent:!1}),a=new THREE.Mesh(r,n),s=[],l=THREE.LensflareElement.Shader,c=new THREE.RawShaderMaterial({uniforms:{map:{value:null},occlusionMap:{value:t},color:{value:new THREE.Color(16777215)},scale:{value:new THREE.Vector2},screenPosition:{value:new THREE.Vector3}},vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0,depthWrite:!1}),u=new THREE.Mesh(r,c);this.addElement=function(e){s.push(e)};var v=new THREE.Vector2,p=new THREE.Vector2,E=new THREE.Box2,f=new THREE.Vector4;this.onBeforeRender=function(l,d,m){f.copy(l.getCurrentViewport());var T=f.w/f.z,y=f.z/2,h=f.w/2,R=16/f.w;if(v.set(R*T,R),E.min.set(f.x,f.y),E.max.set(f.x+(f.z-16),f.y+(f.w-16)),e.setFromMatrixPosition(this.matrixWorld),e.applyMatrix4(m.matrixWorldInverse),e.applyMatrix4(m.projectionMatrix),p.x=f.x+e.x*y+y-8,p.y=f.y+e.y*h+h-8,E.containsPoint(p)){l.copyFramebufferToTexture(p,i),(b=n.uniforms).scale.value=v,b.screenPosition.value=e,l.renderBufferDirect(m,null,r,n,a,null),l.copyFramebufferToTexture(p,t),(b=o.uniforms).scale.value=v,b.screenPosition.value=e,l.renderBufferDirect(m,null,r,o,a,null);for(var x=2*-e.x,g=2*-e.y,H=0,w=s.length;H<w;H++){var b,M=s[H];(b=c.uniforms).color.value.copy(M.color),b.map.value=M.texture,b.screenPosition.value.x=e.x+x*M.distance,b.screenPosition.value.y=e.y+g*M.distance;R=M.size/f.w,T=f.w/f.z;b.scale.value.set(R*T,R),c.uniformsNeedUpdate=!0,l.renderBufferDirect(m,null,r,c,u,null)}}},this.dispose=function(){n.dispose(),o.dispose(),c.dispose(),i.dispose(),t.dispose();for(var e=0,r=s.length;e<r;e++)s[e].texture.dispose()}},THREE.Lensflare.prototype=Object.create(THREE.Mesh.prototype),THREE.Lensflare.prototype.constructor=THREE.Lensflare,THREE.Lensflare.prototype.isLensflare=!0,THREE.LensflareElement=function(e,i,t,r){this.texture=e,this.size=i||1,this.distance=t||0,this.color=r||new THREE.Color(16777215)},THREE.LensflareElement.Shader={uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform sampler2D occlusionMap;","attribute vec3 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position.xy;","\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\tvVisibility =        visibility.r / 9.0;","\tvVisibility *= 1.0 - visibility.g / 9.0;","\tvVisibility *=       visibility.b / 9.0;","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","uniform sampler2D map;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvec4 texture = texture2D( map, vUV );","\ttexture.a *= vVisibility;","\tgl_FragColor = texture;","\tgl_FragColor.rgb *= color;","}"].join("\n")},THREE.Lensflare.Geometry=function(){var e=new THREE.BufferGeometry,i=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),t=new THREE.InterleavedBuffer(i,5);return e.setIndex([0,1,2,0,2,3]),e.addAttribute("position",new THREE.InterleavedBufferAttribute(t,3,0,!1)),e.addAttribute("uv",new THREE.InterleavedBufferAttribute(t,2,3,!1)),e}();