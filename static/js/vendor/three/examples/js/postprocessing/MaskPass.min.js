THREE.MaskPass=function(s,e){THREE.Pass.call(this),this.scene=s,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function(s,e,t,r,a){var c,E,n=s.context,f=s.state;f.buffers.color.setMask(!1),f.buffers.depth.setMask(!1),f.buffers.color.setLocked(!0),f.buffers.depth.setLocked(!0),this.inverse?(c=0,E=1):(c=1,E=0),f.buffers.stencil.setTest(!0),f.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),f.buffers.stencil.setFunc(n.ALWAYS,c,4294967295),f.buffers.stencil.setClear(E),s.render(this.scene,this.camera,t,this.clear),s.render(this.scene,this.camera,e,this.clear),f.buffers.color.setLocked(!1),f.buffers.depth.setLocked(!1),f.buffers.stencil.setFunc(n.EQUAL,1,4294967295),f.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP)}}),THREE.ClearMaskPass=function(){THREE.Pass.call(this),this.needsSwap=!1},THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype),Object.assign(THREE.ClearMaskPass.prototype,{render:function(s,e,t,r,a){s.state.buffers.stencil.setTest(!1)}});