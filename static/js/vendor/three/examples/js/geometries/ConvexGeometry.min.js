!function(){function e(e){THREE.Geometry.call(this),this.fromBufferGeometry(new t(e)),this.mergeVertices()}function t(e){THREE.BufferGeometry.call(this);var t=[],o=[];void 0===THREE.QuickHull&&console.error("THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull");for(var r=(new THREE.QuickHull).setFromPoints(e).faces,n=0;n<r.length;n++){var u=r[n],i=u.edge;do{var E=i.head().point;t.push(E.x,E.y,E.z),o.push(u.normal.x,u.normal.y,u.normal.z),i=i.next}while(i!==u.edge)}this.addAttribute("position",new THREE.Float32BufferAttribute(t,3)),this.addAttribute("normal",new THREE.Float32BufferAttribute(o,3))}e.prototype=Object.create(THREE.Geometry.prototype),e.prototype.constructor=e,t.prototype=Object.create(THREE.BufferGeometry.prototype),t.prototype.constructor=t,THREE.ConvexGeometry=e,THREE.ConvexBufferGeometry=t}();