THREE.TeapotBufferGeometry=function(e,r,t,o,a,i,f){"use strict";var n=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,3,16,17,18,7,19,20,21,11,22,23,24,15,25,26,27,18,28,29,30,21,31,32,33,24,34,35,36,27,37,38,39,30,40,41,0,33,42,43,4,36,44,45,8,39,46,47,12,12,13,14,15,48,49,50,51,52,53,54,55,56,57,58,59,15,25,26,27,51,60,61,62,55,63,64,65,59,66,67,68,27,37,38,39,62,69,70,71,65,72,73,74,68,75,76,77,39,46,47,12,71,78,79,48,74,80,81,52,77,82,83,56,56,57,58,59,84,85,86,87,88,89,90,91,92,93,94,95,59,66,67,68,87,96,97,98,91,99,100,101,95,102,103,104,68,75,76,77,98,105,106,107,101,108,109,110,104,111,112,113,77,82,83,56,107,114,115,84,110,116,117,88,113,118,119,92,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,123,136,137,120,127,138,139,124,131,140,141,128,135,142,143,132,132,133,134,135,144,145,146,147,148,149,150,151,68,152,153,154,135,142,143,132,147,155,156,144,151,157,158,148,154,159,160,68,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,164,177,178,161,168,179,180,165,172,181,182,169,176,183,184,173,173,174,175,176,185,186,187,188,189,190,191,192,193,194,195,196,176,183,184,173,188,197,198,185,192,199,200,189,196,201,202,193,203,203,203,203,204,205,206,207,208,208,208,208,209,210,211,212,203,203,203,203,207,213,214,215,208,208,208,208,212,216,217,218,203,203,203,203,215,219,220,221,208,208,208,208,218,222,223,224,203,203,203,203,221,225,226,204,208,208,208,208,224,227,228,209,209,210,211,212,229,230,231,232,233,234,235,236,237,238,239,240,212,216,217,218,232,241,242,243,236,244,245,246,240,247,248,249,218,222,223,224,243,250,251,252,246,253,254,255,249,256,257,258,224,227,228,209,252,259,260,229,255,261,262,233,258,263,264,237,265,265,265,265,266,267,268,269,270,271,272,273,92,119,118,113,265,265,265,265,269,274,275,276,273,277,278,279,113,112,111,104,265,265,265,265,276,280,281,282,279,283,284,285,104,103,102,95,265,265,265,265,282,286,287,266,285,288,289,270,95,94,93,92],E=[1.4,0,2.4,1.4,-.784,2.4,.784,-1.4,2.4,0,-1.4,2.4,1.3375,0,2.53125,1.3375,-.749,2.53125,.749,-1.3375,2.53125,0,-1.3375,2.53125,1.4375,0,2.53125,1.4375,-.805,2.53125,.805,-1.4375,2.53125,0,-1.4375,2.53125,1.5,0,2.4,1.5,-.84,2.4,.84,-1.5,2.4,0,-1.5,2.4,-.784,-1.4,2.4,-1.4,-.784,2.4,-1.4,0,2.4,-.749,-1.3375,2.53125,-1.3375,-.749,2.53125,-1.3375,0,2.53125,-.805,-1.4375,2.53125,-1.4375,-.805,2.53125,-1.4375,0,2.53125,-.84,-1.5,2.4,-1.5,-.84,2.4,-1.5,0,2.4,-1.4,.784,2.4,-.784,1.4,2.4,0,1.4,2.4,-1.3375,.749,2.53125,-.749,1.3375,2.53125,0,1.3375,2.53125,-1.4375,.805,2.53125,-.805,1.4375,2.53125,0,1.4375,2.53125,-1.5,.84,2.4,-.84,1.5,2.4,0,1.5,2.4,.784,1.4,2.4,1.4,.784,2.4,.749,1.3375,2.53125,1.3375,.749,2.53125,.805,1.4375,2.53125,1.4375,.805,2.53125,.84,1.5,2.4,1.5,.84,2.4,1.75,0,1.875,1.75,-.98,1.875,.98,-1.75,1.875,0,-1.75,1.875,2,0,1.35,2,-1.12,1.35,1.12,-2,1.35,0,-2,1.35,2,0,.9,2,-1.12,.9,1.12,-2,.9,0,-2,.9,-.98,-1.75,1.875,-1.75,-.98,1.875,-1.75,0,1.875,-1.12,-2,1.35,-2,-1.12,1.35,-2,0,1.35,-1.12,-2,.9,-2,-1.12,.9,-2,0,.9,-1.75,.98,1.875,-.98,1.75,1.875,0,1.75,1.875,-2,1.12,1.35,-1.12,2,1.35,0,2,1.35,-2,1.12,.9,-1.12,2,.9,0,2,.9,.98,1.75,1.875,1.75,.98,1.875,1.12,2,1.35,2,1.12,1.35,1.12,2,.9,2,1.12,.9,2,0,.45,2,-1.12,.45,1.12,-2,.45,0,-2,.45,1.5,0,.225,1.5,-.84,.225,.84,-1.5,.225,0,-1.5,.225,1.5,0,.15,1.5,-.84,.15,.84,-1.5,.15,0,-1.5,.15,-1.12,-2,.45,-2,-1.12,.45,-2,0,.45,-.84,-1.5,.225,-1.5,-.84,.225,-1.5,0,.225,-.84,-1.5,.15,-1.5,-.84,.15,-1.5,0,.15,-2,1.12,.45,-1.12,2,.45,0,2,.45,-1.5,.84,.225,-.84,1.5,.225,0,1.5,.225,-1.5,.84,.15,-.84,1.5,.15,0,1.5,.15,1.12,2,.45,2,1.12,.45,.84,1.5,.225,1.5,.84,.225,.84,1.5,.15,1.5,.84,.15,-1.6,0,2.025,-1.6,-.3,2.025,-1.5,-.3,2.25,-1.5,0,2.25,-2.3,0,2.025,-2.3,-.3,2.025,-2.5,-.3,2.25,-2.5,0,2.25,-2.7,0,2.025,-2.7,-.3,2.025,-3,-.3,2.25,-3,0,2.25,-2.7,0,1.8,-2.7,-.3,1.8,-3,-.3,1.8,-3,0,1.8,-1.5,.3,2.25,-1.6,.3,2.025,-2.5,.3,2.25,-2.3,.3,2.025,-3,.3,2.25,-2.7,.3,2.025,-3,.3,1.8,-2.7,.3,1.8,-2.7,0,1.575,-2.7,-.3,1.575,-3,-.3,1.35,-3,0,1.35,-2.5,0,1.125,-2.5,-.3,1.125,-2.65,-.3,.9375,-2.65,0,.9375,-2,-.3,.9,-1.9,-.3,.6,-1.9,0,.6,-3,.3,1.35,-2.7,.3,1.575,-2.65,.3,.9375,-2.5,.3,1.125,-1.9,.3,.6,-2,.3,.9,1.7,0,1.425,1.7,-.66,1.425,1.7,-.66,.6,1.7,0,.6,2.6,0,1.425,2.6,-.66,1.425,3.1,-.66,.825,3.1,0,.825,2.3,0,2.1,2.3,-.25,2.1,2.4,-.25,2.025,2.4,0,2.025,2.7,0,2.4,2.7,-.25,2.4,3.3,-.25,2.4,3.3,0,2.4,1.7,.66,.6,1.7,.66,1.425,3.1,.66,.825,2.6,.66,1.425,2.4,.25,2.025,2.3,.25,2.1,3.3,.25,2.4,2.7,.25,2.4,2.8,0,2.475,2.8,-.25,2.475,3.525,-.25,2.49375,3.525,0,2.49375,2.9,0,2.475,2.9,-.15,2.475,3.45,-.15,2.5125,3.45,0,2.5125,2.8,0,2.4,2.8,-.15,2.4,3.2,-.15,2.4,3.2,0,2.4,3.525,.25,2.49375,2.8,.25,2.475,3.45,.15,2.5125,2.9,.15,2.475,3.2,.15,2.4,2.8,.15,2.4,0,0,3.15,.8,0,3.15,.8,-.45,3.15,.45,-.8,3.15,0,-.8,3.15,0,0,2.85,.2,0,2.7,.2,-.112,2.7,.112,-.2,2.7,0,-.2,2.7,-.45,-.8,3.15,-.8,-.45,3.15,-.8,0,3.15,-.112,-.2,2.7,-.2,-.112,2.7,-.2,0,2.7,-.8,.45,3.15,-.45,.8,3.15,0,.8,3.15,-.2,.112,2.7,-.112,.2,2.7,0,.2,2.7,.45,.8,3.15,.8,.45,3.15,.112,.2,2.7,.2,.112,2.7,.4,0,2.55,.4,-.224,2.55,.224,-.4,2.55,0,-.4,2.55,1.3,0,2.55,1.3,-.728,2.55,.728,-1.3,2.55,0,-1.3,2.55,1.3,0,2.4,1.3,-.728,2.4,.728,-1.3,2.4,0,-1.3,2.4,-.224,-.4,2.55,-.4,-.224,2.55,-.4,0,2.55,-.728,-1.3,2.55,-1.3,-.728,2.55,-1.3,0,2.55,-.728,-1.3,2.4,-1.3,-.728,2.4,-1.3,0,2.4,-.4,.224,2.55,-.224,.4,2.55,0,.4,2.55,-1.3,.728,2.55,-.728,1.3,2.55,0,1.3,2.55,-1.3,.728,2.4,-.728,1.3,2.4,0,1.3,2.4,.224,.4,2.55,.4,.224,2.55,.728,1.3,2.55,1.3,.728,2.55,.728,1.3,2.4,1.3,.728,2.4,0,0,0,1.425,0,0,1.425,.798,0,.798,1.425,0,0,1.425,0,1.5,0,.075,1.5,.84,.075,.84,1.5,.075,0,1.5,.075,-.798,1.425,0,-1.425,.798,0,-1.425,0,0,-.84,1.5,.075,-1.5,.84,.075,-1.5,0,.075,-1.425,-.798,0,-.798,-1.425,0,0,-1.425,0,-1.5,-.84,.075,-.84,-1.5,.075,0,-1.5,.075,.798,-1.425,0,1.425,-.798,0,.84,-1.5,.075,1.5,-.84,.075];THREE.BufferGeometry.call(this),this.type="TeapotBufferGeometry",this.parameters={size:e,segments:r,bottom:t,lid:o,body:a,fitLid:i,blinn:f},e=e||50,r=void 0!==r?Math.max(2,Math.floor(r)||10):10,t=void 0===t||t,o=void 0===o||o,a=void 0===a||a,i=void 0===i||i;var s=3.15*((f=void 0===f||f)?1:1.3)/2,p=e/s,m=t?(8*r-4)*r:0;m+=o?(16*r-4)*r:0,m+=a?40*r*r:0;var y=new Uint32Array(3*m),u=t?4:0;u+=o?8:0,u+=a?20:0,u*=(r+1)*(r+1);var T=new Float32Array(3*u),c=new Float32Array(3*u),l=new Float32Array(2*u),H=new THREE.Matrix4;H.set(-1,3,-3,1,3,-6,3,0,-3,3,0,0,1,0,0,0);var R,d,w,h,A,v,b,B,x,M,G,V,z,g,F,L,j=[],I=[],O=[],S=[],U=[],k=[],q=[],C=[],D=[],J=new THREE.Vector3,K=0,N=0,P=new THREE.Vector3,Q=new THREE.Matrix4,W=new THREE.Matrix4,X=new THREE.Vector4,Y=new THREE.Vector4,Z=new THREE.Vector4,$=new THREE.Vector4,_=new THREE.Vector3,ee=new THREE.Vector3,re=H.clone();re.transpose();var te=function(e,r,t){return!(T[3*e]===T[3*r]&&T[3*e+1]===T[3*r+1]&&T[3*e+2]===T[3*r+2]||T[3*e]===T[3*t]&&T[3*e+1]===T[3*t+1]&&T[3*e+2]===T[3*t+2]||T[3*r]===T[3*t]&&T[3*r+1]===T[3*t+1]&&T[3*r+2]===T[3*t+2])};for(R=0;R<3;R++)k[R]=new THREE.Matrix4;var oe=t?32:28;b=r+1;for(var ae=0,ie=0,fe=0,ne=0,Ee=0,se=a?0:20;se<oe;se++)if(o||se<20||se>=28){for(R=0;R<3;R++){for(d=0;d<4;d++)for(w=0;w<4;w++)j[4*w+d]=E[3*n[16*se+4*d+w]+R],i&&se>=20&&se<28&&2!==R&&(j[4*w+d]*=1.077),f||2!==R||(j[4*w+d]*=1.3);Q.set(j[0],j[1],j[2],j[3],j[4],j[5],j[6],j[7],j[8],j[9],j[10],j[11],j[12],j[13],j[14],j[15]),W.multiplyMatrices(Q,H),k[R].multiplyMatrices(re,W)}for(A=0;A<=r;A++)for(B=A/r,v=0;v<=r;v++){for(x=v/r,V=4,M=G=1;V--;)I[V]=M,O[V]=G,M*=B,G*=x,3===V?(S[V]=U[V]=0,K=N=1):(S[V]=K*(3-V),U[V]=N*(3-V),K*=B,N*=x);for(X.fromArray(I),Y.fromArray(O),Z.fromArray(S),$.fromArray(U),R=0;R<3;R++)(h=X.clone()).applyMatrix4(k[R]),q[R]=h.dot(Y),(h=Z.clone()).applyMatrix4(k[R]),C[R]=h.dot(Y),(h=X.clone()).applyMatrix4(k[R]),D[R]=h.dot($);_.fromArray(C),ee.fromArray(D),J.crossVectors(ee,_),J.normalize(),0===q[0]&&0===q[1]?P.set(0,q[2]>s?1:-1,0):P.set(J.x,J.z,-J.y),T[ie++]=p*q[0],T[ie++]=p*(q[2]-s),T[ie++]=-p*q[1],c[fe++]=P.x,c[fe++]=P.y,c[fe++]=P.z,l[ne++]=1-x,l[ne++]=1-B}for(A=0;A<r;A++)for(v=0;v<r;v++)L=(z=ae*b*b+A*b+v)+b,te(z,g=z+1,F=g+b)&&(y[Ee++]=z,y[Ee++]=g,y[Ee++]=F),te(z,F,L)&&(y[Ee++]=z,y[Ee++]=F,y[Ee++]=L);ae++}this.setIndex(new THREE.BufferAttribute(y,1)),this.addAttribute("position",new THREE.BufferAttribute(T,3)),this.addAttribute("normal",new THREE.BufferAttribute(c,3)),this.addAttribute("uv",new THREE.BufferAttribute(l,2)),this.computeBoundingSphere()},THREE.TeapotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TeapotBufferGeometry.prototype.constructor=THREE.TeapotBufferGeometry,THREE.TeapotBufferGeometry.prototype.clone=function(){return new THREE.TeapotBufferGeometry(this.parameters.size,this.parameters.segments,this.parameters.bottom,this.parameters.lid,this.parameters.body,this.parameters.fitLid,this.parameters.blinn)};