THREE.OutlineEffect=function(e,i){i=i||{},this.enabled=!0;var t=void 0!==i.defaultThickness?i.defaultThickness:.003,a=void 0!==i.defaultColor?i.defaultColor:new THREE.Color(0),r=void 0!==i.defaultAlpha?i.defaultAlpha:1,o=void 0!==i.defaultKeepAlive&&i.defaultKeepAlive,n={},l=60,s={},u={},d={MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical"},c={outlineThickness:{type:"f",value:t},outlineColor:{type:"c",value:a},outlineAlpha:{type:"f",value:r}},f=["#include <fog_pars_vertex>","uniform float outlineThickness;","vec4 calculateOutline( vec4 pos, vec3 objectNormal, vec4 skinned ) {","\tfloat thickness = outlineThickness;","\tconst float ratio = 1.0;","\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + objectNormal, 1.0 );","\tvec4 norm = normalize( pos - pos2 );","\treturn pos + norm * thickness * pos.w * ratio;","}"].join("\n"),v=["#if ! defined( LAMBERT ) && ! defined( PHONG ) && ! defined( TOON ) && ! defined( PHYSICAL )","\t#ifndef USE_ENVMAP","\t\tvec3 objectNormal = normalize( normal );","\t#endif","#endif","#ifdef FLIP_SIDED","\tobjectNormal = -objectNormal;","#endif","#ifdef DECLARE_TRANSFORMED","\tvec3 transformed = vec3( position );","#endif","gl_Position = calculateOutline( gl_Position, objectNormal, vec4( transformed, 1.0 ) );","#include <fog_vertex>"].join("\n"),h=["#include <common>","#include <fog_pars_fragment>","uniform vec3 outlineColor;","uniform float outlineAlpha;","void main() {","\tgl_FragColor = vec4( outlineColor, outlineAlpha );","\t#include <fog_fragment>","}"].join("\n");function m(){return new THREE.ShaderMaterial({name:"invisible",visible:!1})}function p(e){var i=n[e.uuid];return void 0===i&&(i={material:function(e){var i,t,a=d[e.type];if(e.outlineParameters,void 0!==a){var r=THREE.ShaderLib[a];i=r.uniforms,t=r.vertexShader}else if(!0===e.isRawShaderMaterial){if(i=e.uniforms,t=e.vertexShader,!/attribute\s+vec3\s+position\s*;/.test(t)||!/attribute\s+vec3\s+normal\s*;/.test(t))return console.warn("THREE.OutlineEffect requires both vec3 position and normal attributes in vertex shader, does not draw outline for "+e.name+"(uuid:"+e.uuid+") material."),m()}else{if(!0!==e.isShaderMaterial)return m();i=e.uniforms,t=e.vertexShader}var o=Object.assign({},i,c),n=t.replace(/void\s+main\s*\(\s*\)/,f+"\nvoid main()").replace(/\}\s*$/,v+"\n}").replace(/#include\s+<[\w_]*light[\w_]*>/g,""),l={};return/vec3\s+transformed\s*=/.test(t)||/#include\s+<begin_vertex>/.test(t)||(l.DECLARE_TRANSFORMED=!0),new THREE.ShaderMaterial({defines:l,uniforms:o,vertexShader:n,fragmentShader:h,side:THREE.BackSide,skinning:!1,morphTargets:!1,morphNormals:!1,fog:!1})}(e),used:!0,keepAlive:o,count:0},n[e.uuid]=i),i.used=!0,i.material}function g(e){var i=p(e);return s[i.uuid]=e,function(e,i){if("invisible"===e.name)return;var t=i.outlineParameters;e.skinning=i.skinning,e.morphTargets=i.morphTargets,e.morphNormals=i.morphNormals,e.fog=i.fog,void 0!==t?(!1===i.visible?e.visible=!1:e.visible=void 0===t.visible||t.visible,e.transparent=void 0!==t.alpha&&t.alpha<1||i.transparent,void 0!==t.keepAlive&&(n[i.uuid].keepAlive=t.keepAlive)):(e.transparent=i.transparent,e.visible=i.visible);!0!==i.wireframe&&!1!==i.depthTest||(e.visible=!1)}(i,e),i}function b(e){if(void 0!==e.material){if(Array.isArray(e.material))for(var i=0,t=e.material.length;i<t;i++)e.material[i]=g(e.material[i]);else e.material=g(e.material);u[e.uuid]=e.onBeforeRender,e.onBeforeRender=k}}function E(e){if(void 0!==e.material){if(Array.isArray(e.material))for(var i=0,t=e.material.length;i<t;i++)e.material[i]=s[e.material[i].uuid];else e.material=s[e.material.uuid];e.onBeforeRender=u[e.uuid]}}function k(e,i,t,a,r,o){var n,l,u,d=s[r.uuid];void 0!==d&&(n=r,u=(l=d).outlineParameters,n.uniforms.outlineAlpha.value=l.opacity,void 0!==u&&(void 0!==u.thickness&&(n.uniforms.outlineThickness.value=u.thickness),void 0!==u.color&&n.uniforms.outlineColor.value.copy(u.color),void 0!==u.alpha&&(n.uniforms.outlineAlpha.value=u.alpha)))}this.render=function(i,t,a,r){if(!1!==this.enabled){var o=e.autoClear;e.autoClear=this.autoClear,e.render(i,t,a,r);var d=i.autoUpdate,c=i.background,f=e.shadowMap.enabled;i.autoUpdate=!1,i.background=null,e.autoClear=!1,e.shadowMap.enabled=!1,i.traverse(b),e.render(i,t,a),i.traverse(E),function(){for(var e,i=0,t=(e=Object.keys(s)).length;i<t;i++)s[e[i]]=void 0;for(i=0,t=(e=Object.keys(u)).length;i<t;i++)u[e[i]]=void 0;for(i=0,t=(e=Object.keys(n)).length;i<t;i++){var a=e[i];!1===n[a].used?(n[a].count++,!1===n[a].keepAlive&&n[a].count>l&&delete n[a]):(n[a].used=!1,n[a].count=0)}}(),i.autoUpdate=d,i.background=c,e.autoClear=o,e.shadowMap.enabled=f}else e.render(i,t,a,r)},this.autoClear=e.autoClear,this.domElement=e.domElement,this.shadowMap=e.shadowMap,this.clear=function(i,t,a){e.clear(i,t,a)},this.getPixelRatio=function(){return e.getPixelRatio()},this.setPixelRatio=function(i){e.setPixelRatio(i)},this.getSize=function(){return e.getSize()},this.setSize=function(i,t,a){e.setSize(i,t,a)},this.setViewport=function(i,t,a,r){e.setViewport(i,t,a,r)},this.setScissor=function(i,t,a,r){e.setScissor(i,t,a,r)},this.setScissorTest=function(i){e.setScissorTest(i)},this.setRenderTarget=function(i){e.setRenderTarget(i)}};