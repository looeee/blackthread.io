THREE.Car=function(){var e=this;function t(t,h){e.bodyGeometry=t,e.bodyMaterials=h,i()}function h(t,h){e.wheelGeometry=t,e.wheelMaterials=h,i()}function i(){if(e.bodyGeometry&&e.wheelGeometry){if(e.autoWheelGeometry){e.wheelGeometry.computeBoundingBox();var t=e.wheelGeometry.boundingBox;e.wheelOffset.addVectors(t.min,t.max),e.wheelOffset.multiplyScalar(.5),e.wheelDiameter=t.max.y-t.min.y,e.wheelGeometry.center()}var h=e.modelScale,i=new THREE.Vector3,s=e.bodyMaterials,o=e.wheelMaterials;e.bodyMesh=new THREE.Mesh(e.bodyGeometry,s),e.bodyMesh.scale.set(h,h,h),e.root.add(e.bodyMesh),i.multiplyVectors(e.wheelOffset,new THREE.Vector3(h,h,h)),e.frontLeftWheelRoot.position.add(i),e.frontLeftWheelMesh=new THREE.Mesh(e.wheelGeometry,o),e.frontLeftWheelMesh.scale.set(h,h,h),e.frontLeftWheelRoot.add(e.frontLeftWheelMesh),e.root.add(e.frontLeftWheelRoot),i.multiplyVectors(e.wheelOffset,new THREE.Vector3(-h,h,h)),e.frontRightWheelRoot.position.add(i),e.frontRightWheelMesh=new THREE.Mesh(e.wheelGeometry,o),e.frontRightWheelMesh.scale.set(h,h,h),e.frontRightWheelMesh.rotation.z=Math.PI,e.frontRightWheelRoot.add(e.frontRightWheelMesh),e.root.add(e.frontRightWheelRoot),i.multiplyVectors(e.wheelOffset,new THREE.Vector3(h,h,-h)),i.z-=e.backWheelOffset,e.backLeftWheelMesh=new THREE.Mesh(e.wheelGeometry,o),e.backLeftWheelMesh.position.add(i),e.backLeftWheelMesh.scale.set(h,h,h),e.root.add(e.backLeftWheelMesh),i.multiplyVectors(e.wheelOffset,new THREE.Vector3(-h,h,-h)),i.z-=e.backWheelOffset,e.backRightWheelMesh=new THREE.Mesh(e.wheelGeometry,o),e.backRightWheelMesh.position.add(i),e.backRightWheelMesh.scale.set(h,h,h),e.backRightWheelMesh.rotation.z=Math.PI,e.root.add(e.backRightWheelMesh),e.meshes=[e.bodyMesh,e.frontLeftWheelMesh,e.frontRightWheelMesh,e.backLeftWheelMesh,e.backRightWheelMesh],e.loaded=!0,e.callback&&e.callback(e)}}function s(e){return 1===e?1:1-Math.pow(2,-10*e)}this.modelScale=1,this.backWheelOffset=2,this.autoWheelGeometry=!0,this.wheelOffset=new THREE.Vector3,this.wheelDiameter=1,this.MAX_SPEED=2200,this.MAX_REVERSE_SPEED=-1500,this.MAX_WHEEL_ROTATION=.6,this.FRONT_ACCELERATION=1250,this.BACK_ACCELERATION=1500,this.WHEEL_ANGULAR_ACCELERATION=1.5,this.FRONT_DECCELERATION=750,this.WHEEL_ANGULAR_DECCELERATION=1,this.STEERING_RADIUS_RATIO=.0023,this.MAX_TILT_SIDES=.05,this.MAX_TILT_FRONTBACK=.015,this.speed=0,this.acceleration=0,this.wheelOrientation=0,this.carOrientation=0,this.root=new THREE.Object3D,this.frontLeftWheelRoot=new THREE.Object3D,this.frontRightWheelRoot=new THREE.Object3D,this.bodyMesh=null,this.frontLeftWheelMesh=null,this.frontRightWheelMesh=null,this.backLeftWheelMesh=null,this.backRightWheelMesh=null,this.bodyGeometry=null,this.wheelGeometry=null,this.bodyMaterials=null,this.wheelMaterials=null,this.loaded=!1,this.meshes=[],this.enableShadows=function(e){for(var t=0;t<this.meshes.length;t++)this.meshes[t].castShadow=e,this.meshes[t].receiveShadow=e},this.setVisible=function(e){for(var t=0;t<this.meshes.length;t++)this.meshes[t].visible=e,this.meshes[t].visible=e},this.loadPartsJSON=function(e,i){var s=new THREE.JSONLoader;s.load(e,function(e,h){t(e,h)}),s.load(i,function(e,t){h(e,t)})},this.loadPartsBinary=function(e,i){var s=new THREE.BinaryLoader;s.load(e,function(e,h){t(e,h)}),s.load(i,function(e,t){h(e,t)})},this.updateCarModel=function(e,t){if(t.moveForward&&(this.speed=THREE.Math.clamp(this.speed+e*this.FRONT_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration+e,-1,1)),t.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-e*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration-e,-1,1)),t.moveLeft&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation+e*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION)),t.moveRight&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation-e*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION)),!t.moveForward&&!t.moveBackward)if(this.speed>0){var h=s(this.speed/this.MAX_SPEED);this.speed=THREE.Math.clamp(this.speed-h*e*this.FRONT_DECCELERATION,0,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration-h*e,0,1)}else{h=s(this.speed/this.MAX_REVERSE_SPEED);this.speed=THREE.Math.clamp(this.speed+h*e*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,0),this.acceleration=THREE.Math.clamp(this.acceleration+h*e,-1,0)}t.moveLeft||t.moveRight||(this.wheelOrientation>0?this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation-e*this.WHEEL_ANGULAR_DECCELERATION,0,this.MAX_WHEEL_ROTATION):this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation+e*this.WHEEL_ANGULAR_DECCELERATION,-this.MAX_WHEEL_ROTATION,0));var i=this.speed*e;this.carOrientation+=i*this.STEERING_RADIUS_RATIO*this.wheelOrientation,this.root.position.x+=Math.sin(this.carOrientation)*i,this.root.position.z+=Math.cos(this.carOrientation)*i,this.root.rotation.y=this.carOrientation,this.loaded&&(this.bodyMesh.rotation.z=this.MAX_TILT_SIDES*this.wheelOrientation*(this.speed/this.MAX_SPEED),this.bodyMesh.rotation.x=-this.MAX_TILT_FRONTBACK*this.acceleration);var o=i*(1/(this.modelScale*(this.wheelDiameter/2)));this.loaded&&(this.frontLeftWheelMesh.rotation.x+=o,this.frontRightWheelMesh.rotation.x+=o,this.backLeftWheelMesh.rotation.x+=o,this.backRightWheelMesh.rotation.x+=o),this.frontLeftWheelRoot.rotation.y=this.wheelOrientation,this.frontRightWheelRoot.rotation.y=this.wheelOrientation}};