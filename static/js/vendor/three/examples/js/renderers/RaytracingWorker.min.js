var worker,startX,startY,division,scene,camera,renderer,loader,sceneId,BLOCK=128,completed=0;importScripts("../../../build/three.js"),self.onmessage=function(r){var e=r.data;if(e){if(e.init){var a=e.init[0],t=e.init[1];worker=e.worker,BLOCK=e.blockSize,renderer||(renderer=new THREE.RaytracingRendererWorker),loader||(loader=new THREE.ObjectLoader),renderer.setSize(a,t),completed=0}if(e.scene){scene=loader.parse(e.scene),camera=loader.parse(e.camera);var o=e.annex;scene.traverse(function(r){r.isPointLight&&(r.physicalAttenuation=!0);var e=r.material;if(e){var a=o[e.uuid];for(var t in a)e[t]=a[t]}}),sceneId=e.sceneId}e.render&&scene&&camera&&(startX=e.x,startY=e.y,renderer.render(scene,camera))}},THREE.RaytracingRendererWorker=function(){console.log("THREE.RaytracingRendererWorker",THREE.REVISION);var r,e,a,t,o,i,n=new THREE.Vector3,s=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Raycaster(n,s),d=c.ray,E=new THREE.Raycaster,m=E.ray,p=new THREE.Matrix3,y=[],M={};this.setSize=function(o,i){r=o,e=i,a=Math.floor(r/2),t=Math.floor(e/2)};var u,R,h,v,f,T,w=function(){for(var r=new THREE.Color,e=new THREE.Color,a=new THREE.Color,t=new THREE.Color,o=new THREE.Color,n=new THREE.Vector3,s=new THREE.Vector3,l=new THREE.Vector3,p=new THREE.Vector3,u=new THREE.Vector3,R=new THREE.Vector3,h=new THREE.Vector3,v=[],f=0;f<3;f++)v[f]=new THREE.Color;return function f(T,w,x,H){if(x.setRGB(0,0,0),d.origin=T,d.direction=w,0!==(j=c.intersectObjects(i,!0)).length){var b=j[0],V=b.point,S=b.object,C=S.material,W=b.face,k=S.geometry.vertices,z=M[S.id];if(n.subVectors(d.origin,V).normalize(),C.isMeshLambertMaterial||C.isMeshPhongMaterial||C.isMeshBasicMaterial?r.copyGammaToLinear(C.color):r.setRGB(1,1,1),C.vertexColors===THREE.FaceColors&&r.multiply(W.color),m.origin.copy(V),C.isMeshBasicMaterial)for(var L=0,O=y.length;L<O;L++){var I=y[L];s.setFromMatrixPosition(I.matrixWorld),s.sub(V),m.direction.copy(s).normalize(),(j=E.intersectObjects(i,!0)).length>0||x.add(r)}else if(C.isMeshLambertMaterial||C.isMeshPhongMaterial){var P=!1;for(L=0,O=y.length;L<O;L++){var j;I=y[L];if(s.setFromMatrixPosition(I.matrixWorld),s.sub(V),m.direction.copy(s).normalize(),!((j=E.intersectObjects(i,!0)).length>0)){!1===P&&(u.copy(V).applyMatrix4(z.inverseMatrix),g(l,u,C.flatShading,W,k),l.applyMatrix3(z.normalMatrix).normalize(),P=!0),a.copyGammaToLinear(I.color);var B=1;!0===I.physicalAttenuation&&(B=1/((B=s.length())*B)),s.normalize();var G=Math.max(l.dot(s),0)*I.intensity;if(o.copy(r),o.multiply(a),o.multiplyScalar(G*B),x.add(o),C.isMeshPhongMaterial){p.addVectors(s,n).normalize();var q=Math.max(l.dot(p),0),A=Math.max(Math.pow(q,C.shininess),0)*G,F=(C.shininess+2)/8;e.copyGammaToLinear(C.specular);var N=Math.pow(Math.max(1-s.dot(p),0),5);t.r=e.r+(1-e.r)*N,t.g=e.g+(1-e.g)*N,t.b=e.b+(1-e.b)*N,o.copy(t),o.multiply(a),o.multiplyScalar(F*A*B),x.add(o)}}}}var X=C.reflectivity;if((C.mirror||C.glass)&&X>0&&H<3){if(C.mirror)R.copy(w),R.reflect(l);else if(C.glass){var Y=C.refractionRatio,D=w.dot(l),K=1-Y*Y*(1-D*D);if(K<0)R.set(0,0,0);else{R.copy(w),R.multiplyScalar(Y);N=Y*D+Math.sqrt(K);h.copy(l),h.multiplyScalar(N),R.sub(h)}}var U=Math.max(n.dot(l),0),J=X+(1-X)*Math.pow(1-U,5),Q=v[H];f(V,R,Q,H+1),void 0!==C.specular&&Q.multiply(C.specular),Q.multiplyScalar(J),x.multiplyScalar(1-J),x.add(Q)}}}}(),g=(u=new THREE.Vector3,R=new THREE.Vector3,h=new THREE.Vector3,function(r,e,a,t,o){var i=t.normal,n=t.vertexNormals;if(!0===a)r.copy(i);else{var s=o[t.a],l=o[t.b],c=o[t.c];h.crossVectors(u.subVectors(l,s),R.subVectors(c,s));var d=i.dot(h);h.crossVectors(u.subVectors(l,e),R.subVectors(c,e));var E=i.dot(h)/d;h.crossVectors(u.subVectors(c,e),R.subVectors(s,e));var m=i.dot(h)/d,p=1-E-m;u.copy(n[0]),u.multiplyScalar(E),R.copy(n[1]),R.multiplyScalar(m),h.copy(n[2]),h.multiplyScalar(p),r.addVectors(u,R),r.add(h)}}),x=(v=BLOCK,f=new Uint8ClampedArray(v*v*4),T=new THREE.Color,function(r,e){for(var i=0,c=0;c<v;c++)for(var d=0;d<v;d++,i+=4)n.copy(l),s.set(d+r-a,-(c+e-t),-o),s.applyMatrix3(p).normalize(),w(n,s,T,0),f[i+0]=255*Math.sqrt(T.r),f[i+1]=255*Math.sqrt(T.g),f[i+2]=255*Math.sqrt(T.b),f[i+3]=255;self.postMessage({data:f.buffer,blockX:r,blockY:e,blockSize:v,sceneId:sceneId,time:Date.now()-reallyThen},[f.buffer]),f=new Uint8ClampedArray(v*v*4),completed++});this.render=function(r,a){reallyThen=Date.now(),!0===r.autoUpdate&&r.updateMatrixWorld(),null===a.parent&&a.updateMatrixWorld(),l.setFromMatrixPosition(a.matrixWorld),p.getNormalMatrix(a.matrixWorld),o=.5/Math.tan(THREE.Math.degToRad(.5*a.fov))*e,i=r.children,y.length=0,r.traverse(function(r){r.isPointLight&&y.push(r),void 0===M[r.id]&&(M[r.id]={normalMatrix:new THREE.Matrix3,inverseMatrix:new THREE.Matrix4});var e=M[r.id];e.normalMatrix.getNormalMatrix(r.matrixWorld),e.inverseMatrix.getInverse(r.matrixWorld)}),x(startX,startY)}},Object.assign(THREE.RaytracingRendererWorker.prototype,THREE.EventDispatcher.prototype);