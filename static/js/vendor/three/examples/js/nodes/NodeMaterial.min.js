THREE.NodeMaterial=function(e,t){THREE.ShaderMaterial.call(this),this.vertex=e||new THREE.RawNode(new THREE.PositionNode(THREE.PositionNode.PROJECTION)),this.fragment=t||new THREE.RawNode(new THREE.ColorNode(16711680))},THREE.NodeMaterial.types={t:"sampler2D",tc:"samplerCube",bv1:"bool",iv1:"int",fv1:"float",c:"vec3",v2:"vec2",v3:"vec3",v4:"vec4",m4:"mat4"},THREE.NodeMaterial.addShortcuts=function(e,t,r){function i(e,t){return{get:function(){return this[e][t]},set:function(r){this[e][t]=r}}}return function(){for(var a={},s=0;s<r.length;++s){var n=r[s];a[n]=i(t,n)}Object.defineProperties(e,a)}()},THREE.NodeMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.NodeMaterial.prototype.constructor=THREE.NodeMaterial,THREE.NodeMaterial.prototype.type="NodeMaterial",THREE.NodeMaterial.prototype.updateFrame=function(e){for(var t=0;t<this.updaters.length;++t)this.updaters[t].updateFrame(e)},THREE.NodeMaterial.prototype.build=function(){var e,t;this.nodes=[],this.defines={},this.uniforms={},this.attributes={},this.extensions={},this.nodeData={},this.vertexUniform=[],this.fragmentUniform=[],this.vars=[],this.vertexTemps=[],this.fragmentTemps=[],this.uniformList=[],this.consts=[],this.functions=[],this.updaters=[],this.requires={uv:[],color:[],lights:this.lights,fog:this.fog},this.vertexPars="",this.fragmentPars="",this.vertexCode="",this.fragmentCode="",this.vertexNode="",this.fragmentNode="",this.prefixCode=["#ifdef GL_EXT_shader_texture_lod","\t#define texCube(a, b) textureCube(a, b)","\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)","\t#define tex2D(a, b) texture2D(a, b)","\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)","#else","\t#define texCube(a, b) textureCube(a, b)","\t#define texCubeBias(a, b, c) textureCube(a, b, c)","\t#define tex2D(a, b) texture2D(a, b)","\t#define tex2DBias(a, b, c) texture2D(a, b, c)","#endif","#include <packing>"].join("\n");var r=new THREE.NodeBuilder(this);return e=this.vertex.build(r.setShader("vertex"),"v4"),t=this.fragment.build(r.setShader("fragment"),"v4"),this.requires.uv[0]&&(this.addVertexPars("varying vec2 vUv;"),this.addFragmentPars("varying vec2 vUv;"),this.addVertexCode("vUv = uv;")),this.requires.uv[1]&&(this.addVertexPars("varying vec2 vUv2; attribute vec2 uv2;"),this.addFragmentPars("varying vec2 vUv2;"),this.addVertexCode("vUv2 = uv2;")),this.requires.color[0]&&(this.addVertexPars("varying vec4 vColor; attribute vec4 color;"),this.addFragmentPars("varying vec4 vColor;"),this.addVertexCode("vColor = color;")),this.requires.color[1]&&(this.addVertexPars("varying vec4 vColor2; attribute vec4 color2;"),this.addFragmentPars("varying vec4 vColor2;"),this.addVertexCode("vColor2 = color2;")),this.requires.position&&(this.addVertexPars("varying vec3 vPosition;"),this.addFragmentPars("varying vec3 vPosition;"),this.addVertexCode("vPosition = transformed;")),this.requires.worldPosition&&(this.addVertexPars("varying vec3 vWPosition;"),this.addFragmentPars("varying vec3 vWPosition;"),this.addVertexCode("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;")),this.requires.normal&&(this.addVertexPars("varying vec3 vObjectNormal;"),this.addFragmentPars("varying vec3 vObjectNormal;"),this.addVertexCode("vObjectNormal = normal;")),this.requires.worldNormal&&(this.addVertexPars("varying vec3 vWNormal;"),this.addFragmentPars("varying vec3 vWNormal;"),this.addVertexCode("vWNormal = ( modelMatrix * vec4( objectNormal, 0.0 ) ).xyz;")),this.fog=this.requires.fog,this.lights=this.requires.lights,this.transparent=this.requires.transparent||this.blending>THREE.NormalBlending,this.vertexShader=[this.prefixCode,this.vertexPars,this.getCodePars(this.vertexUniform,"uniform"),this.getIncludes(this.consts.vertex),this.getIncludes(this.functions.vertex),"void main(){",this.getCodePars(this.vertexTemps),e,this.vertexCode,"}"].join("\n"),this.fragmentShader=[this.prefixCode,this.fragmentPars,this.getCodePars(this.fragmentUniform,"uniform"),this.getIncludes(this.consts.fragment),this.getIncludes(this.functions.fragment),"void main(){",this.getCodePars(this.fragmentTemps),this.fragmentCode,t,"}"].join("\n"),this.needsUpdate=!0,this.dispose(),this},THREE.NodeMaterial.prototype.define=function(e,t){this.defines[e]=void 0==t?1:t},THREE.NodeMaterial.prototype.isDefined=function(e){return void 0!=this.defines[e]},THREE.NodeMaterial.prototype.mergeUniform=function(e){for(var t in e)this.uniforms[t]=e[t]},THREE.NodeMaterial.prototype.createUniform=function(e,t,r,i){var a=this.uniformList.length,s={type:e,value:t,name:r||"nVu"+a,needsUpdate:i};return this.uniformList.push(s),s},THREE.NodeMaterial.prototype.getVertexTemp=function(e,t,r){var i=this.vertexTemps[e];if(!i){var a=this.vertexTemps.length;i={name:r||"nVt"+a,type:t},this.vertexTemps.push(i),this.vertexTemps[e]=i}return i},THREE.NodeMaterial.prototype.getFragmentTemp=function(e,t,r){var i=this.fragmentTemps[e];if(!i){var a=this.fragmentTemps.length;i={name:r||"nVt"+a,type:t},this.fragmentTemps.push(i),this.fragmentTemps[e]=i}return i},THREE.NodeMaterial.prototype.getVar=function(e,t,r){var i=this.vars[e];if(!i){var a=this.vars.length,s=r||"nVv"+a;i={name:s,type:t},this.vars.push(i),this.vars[e]=i,this.addVertexPars("varying "+t+" "+s+";"),this.addFragmentPars("varying "+t+" "+s+";")}return i},THREE.NodeMaterial.prototype.getAttribute=function(e,t){if(!this.attributes[e]){var r=this.getVar(e,t);this.addVertexPars("attribute "+t+" "+e+";"),this.addVertexCode(r.name+" = "+e+";"),this.attributes[e]={varying:r,name:e,type:t}}return this.attributes[e]},THREE.NodeMaterial.prototype.getIncludes=function(){function e(e,t){return e.deps.length-t.deps.length}return function(t){if(!t)return"";for(var r="",i=(t=t.sort(e),0);i<t.length;i++)t[i].src&&(r+=t[i].src+"\n");return r}}(),THREE.NodeMaterial.prototype.addVertexPars=function(e){this.vertexPars+=e+"\n"},THREE.NodeMaterial.prototype.addFragmentPars=function(e){this.fragmentPars+=e+"\n"},THREE.NodeMaterial.prototype.addVertexCode=function(e){this.vertexCode+=e+"\n"},THREE.NodeMaterial.prototype.addFragmentCode=function(e){this.fragmentCode+=e+"\n"},THREE.NodeMaterial.prototype.addVertexNode=function(e){this.vertexNode+=e+"\n"},THREE.NodeMaterial.prototype.clearVertexNode=function(){var e=this.vertexNode;return this.vertexNode="",e},THREE.NodeMaterial.prototype.addFragmentNode=function(e){this.fragmentNode+=e+"\n"},THREE.NodeMaterial.prototype.clearFragmentNode=function(){var e=this.fragmentNode;return this.fragmentNode="",e},THREE.NodeMaterial.prototype.getCodePars=function(e,t){t=t||"";for(var r="",i=0,a=e.length;i<a;++i){var s=e[i].type,n=e[i].name,o=e[i].value;"t"==s&&o instanceof THREE.CubeTexture&&(s="tc");var d=THREE.NodeMaterial.types[s];if(void 0==d)throw new Error("Node pars "+s+" not found.");r+=t+" "+d+" "+n+";\n"}return r},THREE.NodeMaterial.prototype.createVertexUniform=function(e,t,r,i){var a=this.createUniform(e,t,r,i);return this.vertexUniform.push(a),this.vertexUniform[a.name]=a,this.uniforms[a.name]=a,a},THREE.NodeMaterial.prototype.createFragmentUniform=function(e,t,r,i){var a=this.createUniform(e,t,r,i);return this.fragmentUniform.push(a),this.fragmentUniform[a.name]=a,this.uniforms[a.name]=a,a},THREE.NodeMaterial.prototype.getDataNode=function(e){return this.nodeData[e]=this.nodeData[e]||{}},THREE.NodeMaterial.prototype.include=function(e,t,r,i){var a;(t="string"==typeof t?THREE.NodeLib.get(t):t)instanceof THREE.FunctionNode?a=this.functions[e.shader]=this.functions[e.shader]||[]:t instanceof THREE.ConstNode&&(a=this.consts[e.shader]=this.consts[e.shader]||[]);var s=a[t.name];if(s||(s=a[t.name]={node:t,deps:[]},a.push(s),s.src=t.build(e,"source")),t instanceof THREE.FunctionNode&&r&&a[r.name]&&-1==a[r.name].deps.indexOf(t)&&(a[r.name].deps.push(t),t.includes&&t.includes.length)){var n=0;do{this.include(e,t.includes[n++],r)}while(n<t.includes.length)}i&&(s.src=i)},THREE.NodeMaterial.prototype.toJSON=function(e){if((void 0===e||"string"==typeof e)&&(e={nodes:{}}),e&&!e.materials&&(e.materials={}),!e.materials[this.uuid]){var t={};t.uuid=this.uuid,t.type=this.type,e.materials[t.uuid]=t,""!==this.name&&(t.name=this.name),this.blending!==THREE.NormalBlending&&(t.blending=this.blending),!0===this.flatShading&&(t.flatShading=this.flatShading),this.side!==THREE.FrontSide&&(t.side=this.side),!0===this.transparent&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,!0===this.wireframe&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(t.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(t.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(t.morphTargets=!0),!0===this.skinning&&(t.skinning=!0),t.fog=this.fog,t.lights=this.lights,!1===this.visible&&(t.visible=!1),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),t.vertex=this.vertex.toJSON(e).uuid,t.fragment=this.fragment.toJSON(e).uuid}return e.material=this.uuid,e};