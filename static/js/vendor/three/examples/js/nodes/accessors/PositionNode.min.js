THREE.PositionNode=function(o){THREE.TempNode.call(this,"v3"),this.scope=o||THREE.PositionNode.LOCAL},THREE.PositionNode.LOCAL="local",THREE.PositionNode.WORLD="world",THREE.PositionNode.VIEW="view",THREE.PositionNode.PROJECTION="projection",THREE.PositionNode.prototype=Object.create(THREE.TempNode.prototype),THREE.PositionNode.prototype.constructor=THREE.PositionNode,THREE.PositionNode.prototype.nodeType="Position",THREE.PositionNode.prototype.getType=function(o){switch(this.scope){case THREE.PositionNode.PROJECTION:return"v4"}return this.type},THREE.PositionNode.prototype.isShared=function(o){switch(this.scope){case THREE.PositionNode.LOCAL:case THREE.PositionNode.WORLD:return!1}return!0},THREE.PositionNode.prototype.generate=function(o,e){var i,t=o.material;switch(this.scope){case THREE.PositionNode.LOCAL:t.requires.position=!0,i=o.isShader("vertex")?"transformed":"vPosition";break;case THREE.PositionNode.WORLD:t.requires.worldPosition=!0,i=(o.isShader("vertex"),"vWPosition");break;case THREE.PositionNode.VIEW:i=o.isShader("vertex")?"-mvPosition.xyz":"vViewPosition";break;case THREE.PositionNode.PROJECTION:i=o.isShader("vertex")?"(projectionMatrix * modelViewMatrix * vec4( position, 1.0 ))":"vec4( 0.0 )"}return o.format(i,this.getType(o),e)},THREE.PositionNode.prototype.toJSON=function(o){var e=this.getJSONNode(o);return e||((e=this.createJSONNode(o)).scope=this.scope),e};