THREE.PhongNode=function(){THREE.GLNode.call(this),this.color=new THREE.ColorNode(15658734),this.specular=new THREE.ColorNode(1118481),this.shininess=new THREE.FloatNode(30)},THREE.PhongNode.prototype=Object.create(THREE.GLNode.prototype),THREE.PhongNode.prototype.constructor=THREE.PhongNode,THREE.PhongNode.prototype.nodeType="Phong",THREE.PhongNode.prototype.build=function(e){var i,t=e.material;if(t.define("PHONG"),t.define("ALPHATEST","0.0"),t.requires.lights=!0,e.isShader("vertex")){var s=this.transform?this.transform.parseAndBuildCode(e,"v3",{cache:"transform"}):void 0;t.mergeUniform(THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights])),t.addVertexPars(["varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif","#include <common>","#include <fog_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","#include <shadowmap_pars_vertex>","#include <logdepthbuf_pars_vertex>"].join("\n"));var o=["#include <beginnormal_vertex>","#include <morphnormal_vertex>","#include <skinbase_vertex>","#include <skinnormal_vertex>","#include <defaultnormal_vertex>","#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif","#include <begin_vertex>"];s&&o.push(s.code,"transformed = "+s.result+";"),o.push("\t#include <morphtarget_vertex>","\t#include <skinning_vertex>","\t#include <project_vertex>","\t#include <fog_vertex>","\t#include <logdepthbuf_vertex>","\tvViewPosition = - mvPosition.xyz;","\t#include <worldpos_vertex>","\t#include <shadowmap_vertex>"),i=o.join("\n")}else{this.color.parse(e,{slot:"color"}),this.specular.parse(e),this.shininess.parse(e),this.alpha&&this.alpha.parse(e),this.normal&&this.normal.parse(e),this.normalScale&&this.normal&&this.normalScale.parse(e),this.light&&this.light.parse(e,{cache:"light"}),this.ao&&this.ao.parse(e),this.ambient&&this.ambient.parse(e),this.shadow&&this.shadow.parse(e),this.emissive&&this.emissive.parse(e,{slot:"emissive"}),this.environment&&this.environment.parse(e,{slot:"environment"}),this.environmentAlpha&&this.environment&&this.environmentAlpha.parse(e);var r=this.color.buildCode(e,"c",{slot:"color"}),n=this.specular.buildCode(e,"c"),l=this.shininess.buildCode(e,"fv1"),h=this.alpha?this.alpha.buildCode(e,"fv1"):void 0,a=this.normal?this.normal.buildCode(e,"v3"):void 0,d=this.normalScale&&this.normal?this.normalScale.buildCode(e,"v2"):void 0,u=this.light?this.light.buildCode(e,"v3",{cache:"light"}):void 0,c=this.ao?this.ao.buildCode(e,"fv1"):void 0,m=this.ambient?this.ambient.buildCode(e,"c"):void 0,p=this.shadow?this.shadow.buildCode(e,"c"):void 0,g=this.emissive?this.emissive.buildCode(e,"c",{slot:"emissive"}):void 0,f=this.environment?this.environment.buildCode(e,"c",{slot:"environment"}):void 0,v=this.environmentAlpha&&this.environment?this.environmentAlpha.buildCode(e,"fv1"):void 0;t.requires.transparent=void 0!=h,t.addFragmentPars(["#include <common>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars>","#include <lights_phong_pars_fragment>","#include <shadowmap_pars_fragment>","#include <logdepthbuf_pars_fragment>"].join("\n"));o=["#include <normal_fragment>","\tBlinnPhongMaterial material;",r.code,"\tvec3 diffuseColor = "+r.result+";","\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include <logdepthbuf_fragment>",n.code,"\tvec3 specular = "+n.result+";",l.code,"\tfloat shininess = max(0.0001,"+l.result+");","\tfloat specularStrength = 1.0;"];h&&o.push(h.code,"if ( "+h.result+" <= ALPHATEST ) discard;"),a&&(e.include("perturbNormal2Arb"),o.push(a.code),d&&o.push(d.code),o.push("normal = perturbNormal2Arb(-vViewPosition,normal,"+a.result+","+(new THREE.UVNode).build(e,"v2")+","+(d?d.result:"vec2( 1.0 )")+");")),o.push("material.diffuseColor = "+(u?"vec3( 1.0 )":"diffuseColor")+";"),o.push("material.specularColor = specular;","material.specularShininess = shininess;","material.specularStrength = specularStrength;","#include <lights_template>"),u&&(o.push(u.code,"reflectedLight.directDiffuse = "+u.result+";"),o.push("reflectedLight.directDiffuse *= diffuseColor;","reflectedLight.indirectDiffuse *= diffuseColor;")),c&&o.push(c.code,"reflectedLight.indirectDiffuse *= "+c.result+";"),m&&o.push(m.code,"reflectedLight.indirectDiffuse += "+m.result+";"),p&&o.push(p.code,"reflectedLight.directDiffuse *= "+p.result+";","reflectedLight.directSpecular *= "+p.result+";"),g&&o.push(g.code,"reflectedLight.directDiffuse += "+g.result+";"),o.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular;"),f&&(o.push(f.code),v?o.push(v.code,"outgoingLight = mix( outgoingLight, "+f.result+", "+v.result+" );"):o.push("outgoingLight = "+f.result+";")),h?o.push("gl_FragColor = vec4( outgoingLight, "+h.result+" );"):o.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),o.push("#include <premultiplied_alpha_fragment>","#include <tonemapping_fragment>","#include <encodings_fragment>","#include <fog_fragment>"),i=o.join("\n")}return i},THREE.PhongNode.prototype.toJSON=function(e){var i=this.getJSONNode(e);return i||(i=this.createJSONNode(e),this.transform&&(i.transform=this.transform.toJSON(e).uuid),i.color=this.color.toJSON(e).uuid,i.specular=this.specular.toJSON(e).uuid,i.shininess=this.shininess.toJSON(e).uuid,this.alpha&&(i.alpha=this.alpha.toJSON(e).uuid),this.normal&&(i.normal=this.normal.toJSON(e).uuid),this.normalScale&&(i.normalScale=this.normalScale.toJSON(e).uuid),this.light&&(i.light=this.light.toJSON(e).uuid),this.ao&&(i.ao=this.ao.toJSON(e).uuid),this.ambient&&(i.ambient=this.ambient.toJSON(e).uuid),this.shadow&&(i.shadow=this.shadow.toJSON(e).uuid),this.emissive&&(i.emissive=this.emissive.toJSON(e).uuid),this.environment&&(i.environment=this.environment.toJSON(e).uuid),this.environmentAlpha&&(i.environmentAlpha=this.environmentAlpha.toJSON(e).uuid)),i};